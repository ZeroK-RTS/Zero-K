#define TA			// This is a TA script

#include "constants.h"

piece  torso, pelvis, rupleg, rleg, rfoot, rtoer, rtoef1, rtoef2, lleg, lupleg, lfoot,
       ltoer, ltoef1, ltoef2, launchers, llauncher, lfire1, lfire2, lfire3, lfire4,
       lfire5, lfire6, lfire7, lfire8, lfire9, lfire10, lfire11, lfire12,
       lfire13, lfire14, lfire15, lfire16, lfire17, lfire18, lfire19, lfire20,
       rlauncher, rfire1, rfire2, rfire3, rfire4, rfire5, rfire6, rfire7,
       rfire8, rfire9, rfire10, rfire11, rfire12, rfire13, rfire14, rfire15,
       rfire16, rfire17, rfire18, rfire19, rfire20;

//MAKE SURE FIRE POINTS REMAIN CONSECUTIVE!

static-var  bMoving, bAiming, isReady, gun_1, gun_1_side, Static_Var_3;

// Signal definitions
#define SIG_AIM				4


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

walk()
{
	if( bMoving == TRUE )
		{
		turn lupleg to x-axis <20.016484> speed <50.010989>;
		turn rupleg to x-axis <-20.016484> speed <50.010989>;
		turn lfoot to x-axis <-15.016484> speed <70.016484>;
		turn rfoot to x-axis <5> speed <50.010989>;
		turn rleg to x-axis <-10> speed <70.016484>;

		turn torso to x-axis <-1> speed <5>;
		sleep 304;
		}
		
	if( bMoving == TRUE )
		{
		turn lfoot to x-axis <20.016484> speed <100.021978>;
		turn rfoot to x-axis <10> speed <50.010989>;
		turn rleg to x-axis <20.016484> speed <100.021978>;
		turn ltoef1 to x-axis <22.5016484> speed <100.021978>;
		turn ltoef2 to x-axis <22.5016484> speed <100.021978>;
		turn ltoer to x-axis <-22.5016484> speed <100.021978>;
		turn rtoef1 to x-axis <0> speed <100.021978>;
		turn rtoef2 to x-axis <0> speed <100.021978>;
		sleep 360;
		}
		
	if( bMoving == TRUE )
		{	
		turn rtoer to x-axis <0> speed <100.021978>;
		move pelvis to y-axis [0] speed [2];
		turn pelvis to z-axis <-3.50> speed <3>;
		turn lupleg to x-axis <-20.016484> speed <50.010989>;
		turn rupleg to x-axis <20.016484> speed <50.010989>;
		turn rfoot to x-axis <-20.016484> speed <130.027473>;
		turn lleg to x-axis <-20.016484> speed <100.021978>;
		sleep 650;
		}
		
	if( bMoving == TRUE )
		{
		turn rfoot to x-axis <20.016484> speed <100.021978>;
		turn lleg to x-axis <20.016484> speed <100.021978>;
		move pelvis to y-axis [0] speed [2];
		turn ltoef1 to x-axis <0> speed <100.021978>;
	    turn ltoef2 to x-axis <0> speed <100.021978>;
		turn rtoef1 to x-axis <22.5016484> speed <100.021978>;
		turn rtoef2 to x-axis <22.5016484> speed <100.021978>;
		turn rtoer to x-axis <-22.5016484> speed <100.021978>;
		sleep 360;
		}
		
	if( bMoving == TRUE )
		{
		turn ltoer to x-axis <0> speed <100.021978>;
		move pelvis to y-axis [4] speed [2];
		turn pelvis to z-axis <3.5> speed <8>;
		turn lupleg to x-axis <20.016484> speed <50.010989>;
		turn rupleg to x-axis <-20.016484> speed <50.010989>;
		turn lfoot to x-axis <-20.016484> speed <130.027473>;
		turn rleg to x-axis <-20.016484> speed <100.021978>;
	
		turn torso to y-axis <2.5> speed <12>;
		turn torso to x-axis <1> speed <6>;;
		sleep 650;
		}
	
	if( bMoving == TRUE )
		{		
		turn lfoot to x-axis <20.016484> speed <100.021978>;
		turn rfoot to x-axis <20.016484> speed <70.016484>;
		turn rleg to x-axis <20.016484> speed <100.021978>;
		move pelvis to y-axis [0] speed [2];
		turn ltoef1 to x-axis <22.5016484> speed <100.021978>;
		turn ltoef2 to x-axis <22.5016484> speed <100.021978>;
		turn ltoer to x-axis <-22.5016484> speed <100.021978>;
		turn rtoef1 to x-axis <0> speed <100.021978>;
		turn rtoef2 to x-axis <0> speed <100.021978>;
		sleep 360;
		}
			
	if( bMoving == TRUE )
		{
		turn rtoer to x-axis <0> speed <100.021978>;
		move pelvis to y-axis [4] speed [2];
		turn pelvis to z-axis <-3.50> speed <8>;
		turn lupleg to x-axis <-20.016484> speed <50.010989>;
		turn rupleg to x-axis <20.016484> speed <50.010989>;
		turn rfoot to x-axis <-20.016484> speed <130.027473>;
		turn lleg to x-axis <-20.016484> speed <100.021978>;
		
		turn torso to y-axis <-2.5> speed <12>;
		turn torso to x-axis <-1> speed <6>;
		sleep 650;
		}

	if( bMoving == TRUE )
		{
		turn rfoot to x-axis <20.016484> speed <100.021978>;
		turn lleg to x-axis <20.016484> speed <100.021978>;
		move pelvis to y-axis [0] speed [2];
		turn ltoef1 to x-axis <0> speed <100.021978>;
		turn ltoef2 to x-axis <0> speed <100.021978>;
		turn rtoef1 to x-axis <22.5016484> speed <100.021978>;
		turn rtoef2 to x-axis <22.5016484> speed <100.021978>;
		turn rtoer to x-axis <-22.5016484> speed <100.021978>;
		sleep 360;
		}
	turn ltoer to x-axis <0> speed <100.021978>;
	move pelvis to y-axis [4] speed [2];
	turn pelvis to z-axis <3.5> speed <8>;
	sleep 2;

}

walklegs()
{
		if( bMoving == TRUE )
		{
		turn lupleg to x-axis <20.016484> speed <50.010989>;
		turn rupleg to x-axis <-20.016484> speed <50.010989>;
		turn lfoot to x-axis <-15.016484> speed <70.016484>;
		turn rfoot to x-axis <5> speed <50.010989>;
		turn rleg to x-axis <-10> speed <70.016484>;
		sleep 304;
		}
		
	if( bMoving == TRUE )
		{
		turn lfoot to x-axis <20.016484> speed <100.021978>;
		turn rfoot to x-axis <10> speed <50.010989>;
		turn rleg to x-axis <20.016484> speed <100.021978>;
		turn ltoef1 to x-axis <22.5016484> speed <100.021978>;
		turn ltoef2 to x-axis <22.5016484> speed <100.021978>;
		turn ltoer to x-axis <-22.5016484> speed <100.021978>;
		turn rtoef1 to x-axis <0> speed <100.021978>;
		turn rtoef2 to x-axis <0> speed <100.021978>;		
		sleep 360;
		}
		
	if( bMoving == TRUE )
		{	
		turn rtoer to x-axis <0> speed <100.021978>;
		move pelvis to y-axis [0] speed [2];
		turn pelvis to z-axis <-3.50> speed <3>;
		turn lupleg to x-axis <-20.016484> speed <50.010989>;
		turn rupleg to x-axis <20.016484> speed <50.010989>;
		turn rfoot to x-axis <-20.016484> speed <130.027473>;
		turn lleg to x-axis <-20.016484> speed <100.021978>;
		sleep 650;
		}
		
	if( bMoving == TRUE )
			{
		turn rfoot to x-axis <20.016484> speed <100.021978>;
		turn lleg to x-axis <20.016484> speed <100.021978>;
		move pelvis to y-axis [0] speed [2];
		turn ltoef1 to x-axis <0> speed <100.021978>;
		turn ltoef2 to x-axis <0> speed <100.021978>;
		turn rtoef1 to x-axis <22.5016484> speed <100.021978>;
		turn rtoef2 to x-axis <22.5016484> speed <100.021978>;
		turn rtoer to x-axis <-22.5016484> speed <100.021978>;
		sleep 360;
		}
		
	if( bMoving == TRUE )
			{
		turn ltoer to x-axis <0> speed <100.021978>;
		move pelvis to y-axis [2] speed [2];
		turn pelvis to z-axis <3.5> speed <8>;
		turn lupleg to x-axis <20.016484> speed <50.010989>;
		turn rupleg to x-axis <-20.016484> speed <50.010989>;
		turn lfoot to x-axis <-20.016484> speed <130.027473>;
		turn rleg to x-axis <-20.016484> speed <100.021978>;
			sleep 650;
			}
	
		if( bMoving == TRUE )
			{		
			turn lfoot to x-axis <20.016484> speed <100.021978>;
			turn rfoot to x-axis <20.016484> speed <70.016484>;
			turn rleg to x-axis <20.016484> speed <100.021978>;
			move pelvis to y-axis [0] speed [2];
			turn ltoef1 to x-axis <22.5016484> speed <100.021978>;
			turn ltoer to x-axis <-22.5016484> speed <100.021978>;
			turn ltoef2 to x-axis <22.5016484> speed <100.021978>;
			turn rtoef1 to x-axis <0> speed <100.021978>;
			turn rtoef2 to x-axis <0> speed <100.021978>;
			sleep 360;
			}
			
		if( bMoving == TRUE )
			{
			turn rtoer to x-axis <0> speed <100.021978>;
			move pelvis to y-axis [2] speed [2];
			turn pelvis to z-axis <-3.50> speed <8>;
			turn lupleg to x-axis <-20.016484> speed <50.010989>;
			turn rupleg to x-axis <20.016484> speed <50.010989>;
			turn rfoot to x-axis <-20.016484> speed <130.027473>;
			turn lleg to x-axis <-20.016484> speed <100.021978>;
		sleep 650;
			}

		if( bMoving == TRUE )
			{
			turn rfoot to x-axis <20.016484> speed <100.021978>;
			turn lleg to x-axis <20.016484> speed <100.021978>;
			move pelvis to y-axis [0] speed [2];
			turn ltoef1 to x-axis <0> speed <100.021978>;
			turn ltoef2 to x-axis <0> speed <100.021978>;
			turn rtoef1 to x-axis <22.5016484> speed <100.021978>;
			turn rtoef2 to x-axis <22.5016484> speed <100.021978>;
			turn rtoer to x-axis <-22.5016484> speed <100.021978>;
			sleep 360;
			}
			turn ltoer to x-axis <0> speed <100.021978>;
			move pelvis to y-axis [2] speed [2];
			turn pelvis to z-axis <3.5> speed <8>;
			sleep 2;
	}


MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = bMoving;
		aiming = bAiming;
		if( moving )
		{
			if( aiming )
			{
				Static_Var_3 = 1;
				call-script walklegs();
			}
			if( !aiming )
			{
				Static_Var_3 = 0;
				call-script walk();
			}
			justmoved = TRUE;
		}
		if( !moving )
		{
			Static_Var_3 = 1;
			if( justmoved )
			{
					turn lupleg to x-axis <0> speed <50.010989>;
					turn rupleg to x-axis <0> speed <50.010989>;
					turn lleg to x-axis <0> speed <100.021978>;
					turn rleg to x-axis <0> speed <100.021978>;
					move pelvis to y-axis [0] speed [20];
					turn pelvis to z-axis <0> speed <20>;
					turn rtoef1 to x-axis <0> speed <100.021978>;
					turn rtoef2 to x-axis <0> speed <100.021978>;
					turn rtoer to x-axis <0> speed <100.021978>;
					turn ltoef1 to x-axis <0> speed <100.021978>;
                	turn ltoef2 to x-axis <0> speed <100.021978>;
					turn ltoer to x-axis <0> speed <100.021978>;
					turn rfoot to x-axis <0> speed <100.021978>;
					turn lfoot to x-axis <0> speed <100.021978>;
				if( !aiming )
				{
				turn torso to y-axis <0> speed <100.021978>;
				turn torso to x-axis <0> speed <20>;
				}
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
}

Create()
{
	hide rfire1;
	hide lfire1;
	bMoving = FALSE;
	bAiming = FALSE;
	isReady = 1;
	gun_1 = 1;
	gun_1_side = 0;
	start-script MotionControl();
	start-script SmokeUnit();
    turn ltoef1 to y-axis <45> now;
    turn ltoef2 to y-axis <-45> now;
    turn rtoef1 to y-axis <45> now;
    turn rtoef2 to y-axis <-45> now;
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

RestoreAfterDelay()
{
	sleep 3000;
	turn torso to y-axis <0.000000> speed <90.000000>;
	turn launchers to x-axis <0.000000> speed <45.000000>;
	wait-for-turn torso around y-axis;
	wait-for-turn launchers around x-axis;
	bAiming = FALSE;
}

AimFromWeapon1(piecenum)
{
	piecenum = launchers;
}

FireWeapon1() {
	gun_1 = -1;
	gun_1_side = 1;
}

Shot1() {
	if (gun_1_side)
	{
		++gun_1;
	}
	gun_1_side = !gun_1_side;
}

QueryWeapon1(piecenum) {
	if (gun_1 >= 0 && gun_1 < 20) {
		if (gun_1_side)
		{
			piecenum = (rfire1 + gun_1);
		} else {
			piecenum = (lfire1 + gun_1);
		}
	} else {
		piecenum = launchers;
	}
}

AimWeapon1(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	bAiming = TRUE;
	while( !isReady )
	{
		sleep 100;
	}
	turn torso to y-axis heading speed <90.000000>;
	turn launchers to x-axis <0.000000> - pitch speed <45.000000>;
	wait-for-turn torso around y-axis;
	wait-for-turn launchers around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

Killed(severity, corpsetype)
{
	hide rfire1;
	hide lfire1;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode lfoot type BITMAPONLY | BITMAP4;
		explode lleg type BITMAPONLY | BITMAP5;
		explode rfoot type BITMAPONLY | BITMAP1;
		explode rleg type BITMAPONLY | BITMAP2;
		explode torso type BITMAPONLY | BITMAP1;
		return 1;
	}
	if( severity <= 50 )
	{
		corpsetype = 1;
		explode lfoot type FALL | BITMAP4;
		explode lleg type FALL | BITMAP5;
		explode pelvis type FALL | BITMAP4;
		explode rfoot type FALL | BITMAP1;
		explode rleg type FALL | BITMAP2;
		explode torso type SHATTER | BITMAP1;
		return 1;
	}
	if( severity <= 99 )
	{
		corpsetype = 2;
		explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode torso type SHATTER | BITMAP1;
		return 2;
	}
	corpsetype = 2;
	explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode torso type SHATTER | EXPLODE_ON_HIT | BITMAP1;
	return 2;
}
