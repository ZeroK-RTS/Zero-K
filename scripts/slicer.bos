#define TAK			// This is a TAK script

#include "sfxtype.h"
#include "exptype.h"

piece  torso, pelvis, blade, rthigh, lthigh, lleg, rleg, ruparm,
       luparm, lloarm, base, rocket, head, rocketpoint, bladefx1,
       bladefx2, bladefx3, bladefx4, bladefx5, bladefx6, bladefx7, bladefx8, bladefx9,
       bladefx10;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, Static_Var_4, restore_delay,
            Static_Var_6, Static_Var_7, Static_Var_8, Static_Var_9, Static_Var_10,
            Static_Var_11, Static_Var_12, Static_Var_13, Static_Var_14, jumping;
            
BeginJump()
{
	jumping = 1;
	emit-sfx 1027 from lleg;
	emit-sfx 1027 from rleg;	
}

EndJump()
{
	jumping = 0;
	emit-sfx 1027 from lleg;
	emit-sfx 1027 from rleg;
}

JumpSmoke()
{
	while(1)
	{
		if (jumping)
		{
			emit-sfx 1026 from lleg;
			emit-sfx 1026 from rleg;
		}
		sleep(33);
	}
}


RestoreAfterDelay()
{
	sleep 10000;
	Static_Var_11 = 0;
	turn luparm to z-axis <0.000000> speed <80.000000>;
	turn luparm to y-axis <0.000000> speed <80.000000>;
	turn luparm to x-axis <0.000000> speed <80.000000>;
	turn lloarm to x-axis <0.000000> speed <70.016484>;
	turn lloarm to y-axis <0.000000> speed <70.016484>;
	turn head to y-axis <0.000000> speed <70.016484>;
	turn lloarm to z-axis <0.000000> speed <70.016484>;
	turn torso to y-axis <0.000000> speed <90.000000>;
	wait-for-turn torso around y-axis;
	Static_Var_9 = 0;
}

StartSprint()
{
	Static_Var_11 = 1;
	play-sound( "junofir2", 2 );
	turn rocket to x-axis <10.000000> speed <400.000000>;
	turn base to x-axis <-15.000000> speed <400.000000>;
	move base to y-axis [4.000000] speed [20.000000];
	Static_Var_6 = 1;
	move pelvis to y-axis [0.000000] speed [200.001111];
	turn rthigh to x-axis <45.000000> speed <200.000000>;
	turn rleg to x-axis <-45.000000> speed <200.000000>;
	turn lthigh to x-axis <45.000000> speed <200.000000>;
	turn lleg to x-axis <-45.000000> speed <200.000000>;
	turn luparm to x-axis <-25.000000> speed <400.000000>;
	turn luparm to y-axis <-35.000000> speed <400.000000>;
	turn lloarm to x-axis <-40.000000> speed <400.000000>;
	turn lloarm to y-axis <15.000000> speed <400.000000>;
	turn blade to x-axis <100.000000> speed <400.000000>;
	turn blade to y-axis <-70.000000> speed <400.000000>;
	sleep 100;
}

StopSprint()
{
	turn rocket to x-axis <0.000000> speed <400.000000>;
	turn base to x-axis <0.000000> speed <400.000000>;
	move base to y-axis [0.000000] speed [20.000000];
	Static_Var_6 = 0;
	move pelvis to y-axis [0.000000] speed [200.001111];
	turn rthigh to x-axis <0.000000> speed <200.000000>;
	turn rleg to x-axis <0.000000> speed <200.000000>;
	turn lthigh to x-axis <0.000000> speed <200.000000>;
	turn lleg to x-axis <0.000000> speed <200.000000>;
	turn luparm to z-axis <0.000000> speed <280.016484>;
	turn luparm to y-axis <12.000000> speed <280.016484>;
	turn lloarm to x-axis <-80.016484> speed <270.016484>;
	turn blade to x-axis <0.000000> speed <280.000000>;
	turn blade to y-axis <0.000000> speed <280.000000>;
	wait-for-turn blade around x-axis;
	wait-for-turn blade around y-axis;
	wait-for-turn lloarm around x-axis;
	start-script RestoreAfterDelay();
}

SprintingSmoke()
{
	while( TRUE )
	{
		if( Static_Var_6 )
		{
			spin luparm around x-axis speed <1000.000000> accelerate <1000.000000>;
		}
		else
		{
			stop-spin luparm around x-axis;
		}
		sleep 3;
	}
}

BLADEON()
{
	while( TRUE )
	{
		if( Static_Var_11 )
		{
			emit-sfx 2048 + 2 from blade;
		}
		sleep 1;
	}
}

BLADEONFX()
{
	while( TRUE )
	{
		if( Static_Var_11 )
		{
			sleep 1;
		}
		sleep 1;
	}
}

SpinSpeed()
{
	Static_Var_13 = get UNKNOWN_UNIT_VALUE(75);
	while( TRUE )
	{
		if( Static_Var_12 OR Static_Var_6 )
		{
			set UNKNOWN_UNIT_VALUE(75) to Static_Var_13 * 1;
			emit-sfx 1024 from rocketpoint;
		}
		else
		{
			set UNKNOWN_UNIT_VALUE(75) to Static_Var_13;
		}
		sleep 3;
	}
}

BladeSOUND()
{
	if( Static_Var_11 == 0 )
	{
		sleep 10;
	}
	if( Static_Var_11 == 1 )
	{
		play-sound( "BladeTurnon", 1 );
		sleep 60000;
	}
	sleep 1;
}

walk()
{
	if( Static_Var_6 == 1 )
	{
		sleep 45;
		return (0);
	}
	if( Static_Var_1 )
	{
		move pelvis to y-axis [-0.300000] now;
		turn pelvis to x-axis <13.000000> now;
		turn rthigh to x-axis <17.214286> now;
		turn lthigh to x-axis <-48.868132> now;
		turn lleg to x-axis <32.346154> now;
		turn rleg to x-axis <17.214286> now;
		turn luparm to x-axis <28.126374> now;
		turn lloarm to x-axis <-59.769231> now;
		sleep 45;
	}
	if( Static_Var_1 )
	{
		move pelvis to y-axis [-0.200000] now;
		turn pelvis to x-axis <9.137363> now;
		turn rthigh to x-axis <30.236264> now;
		turn lthigh to x-axis <-32.346154> now;
		turn lleg to x-axis <22.137363> now;
		turn rleg to x-axis <17.571429> now;
		turn luparm to x-axis <15.813187> now;
		turn lloarm to x-axis <-59.769231> now;
		sleep 45;
	}
	if( Static_Var_1 )
	{
		move pelvis to y-axis [0.500000] now;
		turn pelvis to x-axis <6.313187> now;
		turn rthigh to x-axis <-0.335165> now;
		turn lthigh to x-axis <-22.846154> now;
		turn rleg to x-axis <63.626374> now;
		turn luparm to x-axis <9.137363> now;
		turn lloarm to x-axis <-59.769231> now;
		sleep 45;
	}
	if( Static_Var_1 )
	{
		move pelvis to y-axis [0.200000] now;
		turn pelvis to x-axis <2.802198> now;
		turn rthigh to x-axis <-28.467033> now;
		turn lthigh to x-axis <-10.890110> now;
		turn rleg to x-axis <84.390110> now;
		turn luparm to x-axis <1.038462> now;
		turn lloarm to x-axis <-59.769231> now;
		sleep 45;
	}
	if( Static_Var_1 )
	{
		turn pelvis to x-axis <0.000000> now;
		turn rthigh to x-axis <-32.346154> now;
		turn lthigh to x-axis <1.390110> now;
		turn luparm to x-axis <1.747253> now;
		turn lloarm to x-axis <-59.769231> now;
		sleep 45;
	}
	if( Static_Var_1 )
	{
		move pelvis to y-axis [-0.500000] now;
		turn pelvis to x-axis <4.203297> now;
		turn rthigh to x-axis <-42.890110> now;
		turn lthigh to x-axis <11.247253> now;
		turn lleg to x-axis <29.527473> now;
		turn rleg to x-axis <79.467033> now;
		turn luparm to x-axis <-8.423077> now;
		turn lloarm to x-axis <-59.769231> now;
		sleep 45;
	}
	if( Static_Var_1 )
	{
		move pelvis to y-axis [-0.450000] now;
		turn pelvis to x-axis <13.000000> now;
		turn rthigh to x-axis <-48.868132> now;
		turn lthigh to x-axis <12.291209> now;
		turn lleg to x-axis <28.824176> now;
		turn rleg to x-axis <32.692308> now;
		turn luparm to x-axis <-18.280220> now;
		turn lloarm to x-axis <-59.769231> now;
		sleep 45;
	}
	if( Static_Var_1 )
	{
		move pelvis to y-axis [-0.200000] now;
		turn pelvis to x-axis <9.137363> now;
		turn rthigh to x-axis <-33.758242> now;
		turn lthigh to x-axis <3.148352> now;
		turn lleg to x-axis <47.813187> now;
		turn luparm to x-axis <-7.027473> now;
		turn lloarm to x-axis <-59.769231> now;
		sleep 45;
	}
	if( Static_Var_1 )
	{
		move pelvis to y-axis [-0.500000] now;
		turn pelvis to x-axis <6.313187> now;
		turn rthigh to x-axis <-25.659341> now;
		turn lthigh to x-axis <-11.593407> now;
		turn lleg to x-axis <66.456044> now;
		turn luparm to x-axis <4.912088> now;
		turn lloarm to x-axis <-59.769231> now;
		sleep 45;
	}
	if( Static_Var_1 )
	{
		move pelvis to y-axis [0.200000] now;
		turn pelvis to x-axis <2.802198> now;
		turn rthigh to x-axis <-15.104396> now;
		turn lthigh to x-axis <-27.071429> now;
		turn luparm to x-axis <14.758242> now;
		turn lloarm to x-axis <-59.769231> now;
		sleep 45;
	}
	if( Static_Var_1 )
	{
		turn pelvis to x-axis <0.000000> now;
		turn rthigh to x-axis <2.093407> now;
		turn lthigh to x-axis <-34.104396> now;
		turn lleg to x-axis <68.560440> now;
		turn luparm to x-axis <23.549451> now;
		turn lloarm to x-axis <-59.769231> now;
		sleep 45;
	}
	move pelvis to y-axis [-0.400000] now;
	turn pelvis to x-axis <4.203297> now;
	turn rthigh to x-axis <11.247253> now;
	turn lthigh to x-axis <-44.291209> now;
	turn lleg to x-axis <75.593407> now;
	turn luparm to x-axis <26.357143> now;
	sleep 45;
}

walklegs()
{
	if( Static_Var_6 == 1 )
	{
		sleep 45;
		return (0);
	}
	if( Static_Var_1 )
	{
		move pelvis to y-axis [-0.300000] now;
		turn pelvis to x-axis <13.000000> now;
		turn rthigh to x-axis <17.214286> now;
		turn lthigh to x-axis <-48.868132> now;
		turn lleg to x-axis <32.346154> now;
		turn rleg to x-axis <17.214286> now;
		sleep 45;
	}
	if( Static_Var_1 )
	{
		move pelvis to y-axis [-0.200000] now;
		turn pelvis to x-axis <9.137363> now;
		turn rthigh to x-axis <30.236264> now;
		turn lthigh to x-axis <-32.346154> now;
		turn lleg to x-axis <22.137363> now;
		turn rleg to x-axis <17.571429> now;
		sleep 45;
	}
	if( Static_Var_1 )
	{
		move pelvis to y-axis [0.500000] now;
		turn pelvis to x-axis <6.313187> now;
		turn rthigh to x-axis <-0.335165> now;
		turn lthigh to x-axis <-22.846154> now;
		turn rleg to x-axis <63.626374> now;
		sleep 45;
	}
	if( Static_Var_1 )
	{
		move pelvis to y-axis [0.200000] now;
		turn pelvis to x-axis <2.802198> now;
		turn rthigh to x-axis <-28.467033> now;
		turn lthigh to x-axis <-10.890110> now;
		turn rleg to x-axis <84.390110> now;
		sleep 45;
	}
	if( Static_Var_1 )
	{
		turn pelvis to x-axis <0.000000> now;
		turn rthigh to x-axis <-32.346154> now;
		turn lthigh to x-axis <1.390110> now;
		sleep 45;
	}
	if( Static_Var_1 )
	{
		move pelvis to y-axis [-0.500000] now;
		turn pelvis to x-axis <4.203297> now;
		turn rthigh to x-axis <-42.890110> now;
		turn lthigh to x-axis <11.247253> now;
		turn lleg to x-axis <29.527473> now;
		turn rleg to x-axis <79.467033> now;
		sleep 45;
	}
	if( Static_Var_1 )
	{
		move pelvis to y-axis [-0.450000] now;
		turn pelvis to x-axis <13.000000> now;
		turn rthigh to x-axis <-48.868132> now;
		turn lthigh to x-axis <12.291209> now;
		turn lleg to x-axis <28.824176> now;
		turn rleg to x-axis <32.692308> now;
		sleep 45;
	}
	if( Static_Var_1 )
	{
		move pelvis to y-axis [-0.200000] now;
		turn pelvis to x-axis <9.137363> now;
		turn rthigh to x-axis <-33.758242> now;
		turn lthigh to x-axis <3.148352> now;
		turn lleg to x-axis <47.813187> now;
		sleep 45;
	}
	if( Static_Var_1 )
	{
		move pelvis to y-axis [-0.500000] now;
		turn pelvis to x-axis <6.313187> now;
		turn rthigh to x-axis <-25.659341> now;
		turn lthigh to x-axis <-11.593407> now;
		turn lleg to x-axis <66.456044> now;
		sleep 45;
	}
	if( Static_Var_1 )
	{
		move pelvis to y-axis [0.200000] now;
		turn pelvis to x-axis <2.802198> now;
		turn rthigh to x-axis <-15.104396> now;
		turn lthigh to x-axis <-27.071429> now;
		sleep 45;
	}
	if( Static_Var_1 )
	{
		turn pelvis to x-axis <0.000000> now;
		turn rthigh to x-axis <2.093407> now;
		turn lthigh to x-axis <-34.104396> now;
		turn lleg to x-axis <68.560440> now;
		sleep 45;
	}
	move pelvis to y-axis [-0.400000] now;
	turn pelvis to x-axis <4.203297> now;
	turn rthigh to x-axis <11.247253> now;
	turn lthigh to x-axis <-44.291209> now;
	turn lleg to x-axis <75.593407> now;
	sleep 45;
}

SmokeUnit(Func_Var_1, Func_Var_2, Func_Var_3)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		Func_Var_1 = get HEALTH;
		if( Func_Var_1 < 66 )
		{
			Func_Var_3 = 256 | 2;
			if( Rand( 1, 66 ) < Func_Var_1 )
			{
				Func_Var_3 = 256 | 1;
			}
			emit-sfx Func_Var_3 from torso;
		}
		Func_Var_2 = Func_Var_1 * 50;
		if( Func_Var_2 < 200 )
		{
			Func_Var_2 = 200;
		}
		sleep Func_Var_2;
	}
}

MotionControl()
{
	var Func_Var_1, Func_Var_2, Func_Var_3;
	Func_Var_3 = 1;
	while( TRUE )
	{
		Func_Var_1 = Static_Var_1;
		Func_Var_2 = Static_Var_9;
		if( Func_Var_1 )
		{
			if( Func_Var_2 )
			{
				Static_Var_3 = 1;
				call-script walklegs();
			}
			if( !Func_Var_2 )
			{
				Static_Var_3 = 0;
				call-script walk();
			}
			if( Static_Var_6 )
			{
				Static_Var_3 = 2;
			}
			Func_Var_3 = 1;
		}
		if( !Func_Var_1 )
		{
			Static_Var_3 = 1;
			if( Func_Var_3 )
			{
				move pelvis to y-axis [0.000000] speed [0.001111];
				turn rthigh to x-axis <0.000000> speed <200.000000>;
				turn rleg to x-axis <0.000000> speed <200.000000>;
				turn lthigh to x-axis <0.000000> speed <200.000000>;
				turn lleg to x-axis <0.000000> speed <200.000000>;
				if( !Func_Var_2 )
				{
					turn torso to y-axis <0.000000> speed <90.000000>;
				}
				Func_Var_3 = 0;
			}
			sleep 100;
		}
		if( !Func_Var_1 )
		{
			Static_Var_3 = 2;
			if( Func_Var_3 )
			{
				move pelvis to y-axis [0.000000] speed [200.001111];
				turn rthigh to x-axis <45.000000> speed <200.000000>;
				turn rleg to x-axis <-45.000000> speed <200.000000>;
				turn lthigh to x-axis <45.000000> speed <200.000000>;
				turn lleg to x-axis <-45.000000> speed <200.000000>;
				turn luparm to x-axis <-25.000000> speed <400.000000>;
				turn luparm to y-axis <-35.000000> speed <400.000000>;
				turn lloarm to x-axis <-40.000000> speed <400.000000>;
				turn lloarm to y-axis <15.000000> speed <400.000000>;
				turn blade to x-axis <100.000000> speed <400.000000>;
				turn blade to y-axis <-70.000000> speed <400.000000>;
				if( !Func_Var_2 )
				{
					move pelvis to y-axis [0.000000] speed [200.001111];
					turn rthigh to x-axis <45.000000> speed <200.000000>;
					turn rleg to x-axis <-45.000000> speed <200.000000>;
					turn lthigh to x-axis <45.000000> speed <200.000000>;
					turn lleg to x-axis <-45.000000> speed <200.000000>;
					turn luparm to x-axis <-25.000000> speed <400.000000>;
					turn luparm to y-axis <-35.000000> speed <400.000000>;
					turn lloarm to x-axis <-40.000000> speed <400.000000>;
					turn lloarm to y-axis <15.000000> speed <400.000000>;
					turn blade to x-axis <100.000000> speed <400.000000>;
					turn blade to y-axis <-70.000000> speed <400.000000>;
				}
				Func_Var_3 = 0;
			}
			sleep 100;
		}
	}
}

Create()
{
	move bladefx1 to z-axis [2.500000] speed [300.000000];
	move bladefx2 to z-axis [2.500000] speed [300.000000];
	move bladefx3 to z-axis [2.500000] speed [300.000000];
	move bladefx4 to z-axis [2.500000] speed [300.000000];
	move bladefx5 to z-axis [2.500000] speed [300.000000];
	move bladefx6 to z-axis [2.500000] speed [300.000000];
	move bladefx7 to z-axis [2.500000] speed [300.000000];
	move bladefx8 to z-axis [2.500000] speed [300.000000];
	move bladefx9 to z-axis [2.500000] speed [300.000000];
	move bladefx10 to z-axis [2.500000] speed [300.000000];
	hide rocketpoint;
	hide bladefx1;
	hide bladefx2;
	hide bladefx3;
	hide bladefx4;
	hide bladefx5;
	hide bladefx6;
	hide bladefx7;
	hide bladefx8;
	hide bladefx9;
	hide bladefx10;
	hide blade;
	turn rocketpoint to y-axis <25.000000> speed <400.000000>;
	Static_Var_1 = 0;
	Static_Var_2 = 0;
	Static_Var_3 = 1;
	Static_Var_4 = 0;
	Static_Var_11 = 0;
	Static_Var_10 = 0;
	Static_Var_6 = 0;
	restore_delay = 3000;
	Static_Var_14 = 0;
	start-script MotionControl();
	start-script SmokeUnit();
	Static_Var_9 = 0;
	start-script BLADEON();
	start-script BLADEONFX();
	start-script SpinSpeed();
	start-script SprintingSmoke();
	start-script JumpSmoke();
}

SetMaxReloadTime(time)
{
	restore_delay = time * 5;
}

StartMoving()
{
	Static_Var_1 = 1;
}

StopMoving()
{
	Static_Var_1 = 0;
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

AimSecondary()
{
	return (1);
}

FireSecondary()
{
	return (1);
}

QuerySecondary(Func_Var_1)
{
	Func_Var_1 = 12;
}

AimFromSecondary(Func_Var_1)
{
	Func_Var_1 = 12;
}

AimFromPrimary(Func_Var_1)
{
	Func_Var_1 = 13;
}

QueryPrimary(Func_Var_1)
{
	Func_Var_1 = 2;
}

AimPrimary(Func_Var_1, Func_Var_2)
{
	if( Static_Var_6 == 1 )
	{
		sleep 45;
		return (0);
	}
	if( Static_Var_14 == 1 )
	{
		return (0);
	}
	Static_Var_11 = 1;
	signal 4;
	set-signal-mask 4;
	Static_Var_9 = 1;
	turn luparm to z-axis <-10.000000> speed <180.016484>;
	turn luparm to y-axis <12.000000> speed <180.016484>;
	turn torso to y-axis Func_Var_1 speed <630.027473>;
	turn head to y-axis Func_Var_1 speed <330.027473>;
	turn lloarm to x-axis <-80.016484> speed <170.016484>;
	wait-for-turn torso around y-axis;
	wait-for-turn lloarm around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary(Func_Var_1, Func_Var_2)
{
	Static_Var_10 = Rand( 0, 9 );
	Static_Var_14 = 1;
	if( Static_Var_10 == 0 )
	{
		start-script BladeSOUND();
		turn luparm to x-axis <-35.000000> speed <300.000000>;
		turn luparm to y-axis <-35.000000> speed <300.000000>;
		turn lloarm to x-axis <-45.000000> speed <300.000000>;
		turn lloarm to y-axis <15.000000> speed <300.000000>;
		turn blade to x-axis <100.000000> speed <420.000000>;
		turn blade to y-axis <-120.000000> speed <530.000000>;
		wait-for-turn luparm around x-axis;
		wait-for-turn luparm around y-axis;
		wait-for-turn lloarm around x-axis;
		wait-for-turn lloarm around y-axis;
		wait-for-turn blade around y-axis;
		wait-for-turn blade around x-axis;
		sleep 100;
		turn luparm to z-axis <-10.000000> speed <280.016484>;
		turn luparm to y-axis <12.000000> speed <280.016484>;
		turn lloarm to x-axis <-80.016484> speed <270.016484>;
		turn blade to x-axis <0.000000> speed <280.000000>;
		turn blade to y-axis <0.000000> speed <280.000000>;
		wait-for-turn blade around x-axis;
		wait-for-turn blade around y-axis;
		wait-for-turn lloarm around x-axis;
		Static_Var_14 = 0;
		return (0);
	}
	if( Static_Var_10 > 0 AND Static_Var_10 < 3 )
	{
		play-sound( "junofir2", 2 );
		Static_Var_12 = 1;
		move torso to y-axis [-3.000000] speed [20.000000];
		move ruparm to y-axis [-3.000000] speed [20.000000];
		move luparm to y-axis [-2.000000] speed [300.000000];
		turn luparm to x-axis <-90.000000> speed <600.000000>;
		turn lloarm to x-axis <10.000000> speed <600.000000>;
		spin torso around y-axis speed <1000.000000> accelerate <1000.000000>;
		turn blade to x-axis <90.000000> speed <600.000000>;
		wait-for-turn blade around x-axis;
		sleep 800;
		stop-spin torso around y-axis decelerate <1000.000000>;
		move torso to y-axis [0.000000] speed [1.000000];
		move ruparm to y-axis [0.000000] speed [1.000000];
		move luparm to y-axis [0.000000] speed [300.000000];
		turn luparm to x-axis <0.000000> speed <600.000000>;
		turn lloarm to x-axis <-80.016484> speed <270.016484>;
		turn blade to x-axis <0.000000> speed <600.000000>;
		Static_Var_14 = 0;
		Static_Var_12 = 0;
		return (0);
	}
	if( Static_Var_10 > 2 AND Static_Var_10 < 10 )
	{
		start-script BladeSOUND();
		turn luparm to y-axis <-110.000000> speed <2100.000000>;
		turn lloarm to y-axis <90.000000> speed <1800.000000>;
		turn blade to x-axis <89.000000> speed <1600.000000>;
		turn blade to y-axis <-145.000000> speed <1900.000000>;
		wait-for-turn blade around x-axis;
		turn blade to y-axis <0.000000> speed <1100.000000>;
		turn luparm to z-axis <-10.000000> speed <680.016484>;
		turn luparm to y-axis <12.000000> speed <680.016484>;
		turn lloarm to x-axis <-80.016484> speed <670.016484>;
		turn blade to x-axis <0.000000> speed <780.000000>;
		turn blade to y-axis <0.000000> speed <780.000000>;
		wait-for-turn blade around x-axis;
		wait-for-turn blade around y-axis;
		wait-for-turn lloarm around x-axis;
		Static_Var_14 = 0;
		return (0);
	}
}

Killed(Func_Var_1, Func_Var_2)
{
	if( Func_Var_1 <= 25 )
	{
		Func_Var_2 = 1;
		explode lleg type BITMAPONLY | EXPLODE_ON_HIT;
		explode lloarm type BITMAPONLY | EXPLODE_ON_HIT;
		explode lthigh type BITMAPONLY | EXPLODE_ON_HIT;
		explode luparm type BITMAPONLY | EXPLODE_ON_HIT;
		explode pelvis type BITMAPONLY | EXPLODE_ON_HIT;
		explode rleg type BITMAPONLY | EXPLODE_ON_HIT;
		explode rthigh type BITMAPONLY | EXPLODE_ON_HIT;
		explode ruparm type BITMAPONLY | EXPLODE_ON_HIT;
		explode torso type BITMAPONLY | EXPLODE_ON_HIT;
		return (0);
	}
	if( Func_Var_1 <= 50 )
	{
		Func_Var_2 = 2;
		explode lleg type FALL | EXPLODE_ON_HIT;
		explode lloarm type FALL | EXPLODE_ON_HIT;
		explode lthigh type FALL | EXPLODE_ON_HIT;
		explode luparm type FALL | EXPLODE_ON_HIT;
		explode pelvis type FALL | EXPLODE_ON_HIT;
		explode rleg type FALL | EXPLODE_ON_HIT;
		explode rthigh type FALL | EXPLODE_ON_HIT;
		explode ruparm type FALL | EXPLODE_ON_HIT;
		explode torso type 1 | EXPLODE_ON_HIT;
		return (0);
	}
	if( Func_Var_1 <= 99 )
	{
		Func_Var_2 = 3;
		explode lleg type FALL | 8 | 16 | 2 | EXPLODE_ON_HIT;
		explode lloarm type FALL | 8 | 16 | 2 | EXPLODE_ON_HIT;
		explode lthigh type FALL | 8 | 16 | 2 | EXPLODE_ON_HIT;
		explode luparm type FALL | 8 | 16 | 2 | EXPLODE_ON_HIT;
		explode pelvis type FALL | 8 | 16 | 2 | EXPLODE_ON_HIT;
		explode rleg type FALL | 8 | 16 | 2 | EXPLODE_ON_HIT;
		explode rthigh type FALL | 8 | 16 | 2 | EXPLODE_ON_HIT;
		explode ruparm type FALL | 8 | 16 | 2 | EXPLODE_ON_HIT;
		explode torso type 1 | EXPLODE_ON_HIT;
		return (0);
	}
	Func_Var_2 = 3;
	explode lloarm type FALL | 8 | 16 | 2 | EXPLODE_ON_HIT;
	explode lthigh type FALL | 8 | 16 | 2 | EXPLODE_ON_HIT;
	explode luparm type FALL | 8 | 16 | 2 | EXPLODE_ON_HIT;
	explode pelvis type FALL | 8 | 16 | 2 | EXPLODE_ON_HIT;
	explode rleg type FALL | 8 | 16 | 2 | EXPLODE_ON_HIT;
	explode rthigh type FALL | 8 | 16 | 2 | EXPLODE_ON_HIT;
	explode ruparm type FALL | 8 | 16 | 2 | EXPLODE_ON_HIT;
	explode torso type 1 | 2 | EXPLODE_ON_HIT;
}
