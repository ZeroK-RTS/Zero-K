local supported_teamcounts = {2, 5, 6, 10, 11, 15, 16}

local L5 = {
	{
		{3479, 4688},
		{3560, 4599},
		{3712, 4559},
		{3936, 4486},
		{4159, 4434},
		{4433, 4457},
		{4606, 4586},
		{4717, 4755},
		{4792, 4941},
		{4813, 5085},
		{4751, 5208},
		{4547, 5376},
		{4386, 5554},
		{4231, 5659},
		{3974, 5669},
		{3739, 5532},
		{3599, 5347},
		{3470, 5058},
		{3418, 4834},
		{3434, 4762},
	},
	{
		{6776, 3476},
		{7100, 3490},
		{7285, 3644},
		{7444, 3906},
		{7541, 4211},
		{7484, 4430},
		{7362, 4583},
		{7123, 4712},
		{6826, 4747},
		{6548, 4637},
		{6291, 4357},
		{6186, 4051},
		{6216, 3761},
		{6389, 3582},
		{6605, 3503},
	},
	{
		{9363, 5951},
		{9334, 6050},
		{9359, 6189},
		{9443, 6325},
		{9301, 6432},
		{9183, 6588},
		{8960, 6684},
		{8704, 6720},
		{8503, 6728},
		{8279, 6578},
		{8126, 6376},
		{8121, 6144},
		{8160, 5921},
		{8309, 5832},
		{8582, 5707},
		{8821, 5673},
		{9161, 5736},
		{9271, 5846},
	},
	{
		{7177, 9124},
		{7296, 9059},
		{7480, 9039},
		{7575, 8925},
		{7615, 8673},
		{7625, 8328},
		{7568, 8041},
		{7360, 7916},
		{7114, 7861},
		{6889, 7831},
		{6669, 7950},
		{6488, 8134},
		{6449, 8353},
		{6461, 8617},
		{6614, 8850},
		{6889, 9041},
	},
	{
		{3774, 8159},
		{3900, 8159},
		{4053, 8302},
		{4081, 8454},
		{4349, 8447},
		{4718, 8339},
		{4943, 8145},
		{5051, 7956},
		{5019, 7696},
		{4814, 7436},
		{4496, 7238},
		{4241, 7219},
		{3983, 7337},
		{3754, 7579},
		{3731, 7825},
		{3757, 8030},
	},
}

local L10 = {
	{
		{1450, 4569},
		{1639, 4838},
		{1638, 5048},
		{1615, 5380},
		{1551, 5495},
		{1377, 5528},
		{1271, 5650},
		{1002, 5584},
		{654, 5504},
		{466, 5311},
		{348, 4971},
		{450, 4735},
		{784, 4460},
		{1059, 4403},
		{1264, 4481},
	},
	{
		{2870, 2129},
		{2808, 2274},
		{2825, 2431},
		{2896, 2563},
		{2799, 2725},
		{2538, 2909},
		{2445, 2836},
		{2334, 2836},
		{2253, 2960},
		{1930, 2765},
		{1719, 2545},
		{1632, 2360},
		{1677, 2184},
		{1824, 1946},
		{1966, 1731},
		{2172, 1642},
		{2432, 1657},
		{2708, 1810},
		{2783, 1998},
	},
	{
		{5107, 1496},
		{5252, 1483},
		{5366, 1535},
		{5381, 1672},
		{5682, 1648},
		{5860, 1603},
		{6024, 1522},
		{6004, 1432},
		{6047, 1242},
		{6146, 1195},
		{6103, 789},
		{5968, 563},
		{5748, 474},
		{5460, 446},
		{5188, 599},
		{5017, 771},
		{4991, 1047},
		{5019, 1278},
	},
	{
		{8245, 1569},
		{8324, 1618},
		{8356, 1730},
		{8308, 1878},
		{8433, 1987},
		{8744, 2165},
		{8962, 2265},
		{9071, 2229},
		{9329, 2105},
		{9594, 1786},
		{9578, 1484},
		{9404, 1139},
		{9083, 924},
		{8814, 908},
		{8629, 1022},
		{8413, 1213},
		{8291, 1430},
	},
	{
		{10293, 3925},
		{10334, 4004},
		{10319, 4119},
		{10207, 4207},
		{10278, 4452},
		{10410, 4653},
		{10513, 4766},
		{10631, 4851},
		{10785, 4850},
		{10948, 4921},
		{11168, 4898},
		{11394, 4711},
		{11513, 4529},
		{11564, 4242},
		{11474, 3996},
		{11383, 3822},
		{11176, 3662},
		{11039, 3618},
		{10924, 3642},
		{10597, 3740},
		{10397, 3829},
	},
	{
		{11213, 7150},
		{11175, 7242},
		{11025, 7351},
		{10872, 7361},
		{10803, 7617},
		{10766, 7854},
		{10885, 7955},
		{10830, 8103},
		{10994, 8256},
		{11210, 8336},
		{11512, 8385},
		{11687, 8255},
		{11873, 7929},
		{12004, 7646},
		{11913, 7384},
		{11741, 7230},
		{11434, 7125},
	},
	{
		{8849, 9848},
		{8724, 10101},
		{8753, 10288},
		{8972, 10564},
		{9249, 10754},
		{9484, 10775},
		{9714, 10684},
		{9968, 10486},
		{10053, 10270},
		{10050, 9975},
		{9830, 9680},
		{9546, 9534},
		{9450, 9600},
		{9276, 9584},
		{9073, 9666},
		{8950, 9738},
	},
	{
		{6456, 10774},
		{6289, 10861},
		{6235, 10963},
		{6083, 11001},
		{6027, 11229},
		{6033, 11509},
		{6135, 11700},
		{6358, 11872},
		{6734, 11943},
		{7031, 11843},
		{7226, 11635},
		{7189, 11246},
		{7111, 10938},
		{7029, 10713},
		{6877, 10650},
		{6653, 10684},
	},
	{
		{3454, 10273},
		{3342, 10362},
		{3183, 10370},
		{3018, 10557},
		{2875, 10822},
		{2896, 11085},
		{3023, 11353},
		{3300, 11541},
		{3626, 11587},
		{3872, 11456},
		{4008, 11226},
		{4101, 10983},
		{4170, 10780},
		{4127, 10629},
		{3815, 10395},
	},
	{
		{1365, 7844},
		{1415, 7926},
		{1522, 7957},
		{1604, 7953},
		{1727, 8083},
		{1859, 8332},
		{1904, 8540},
		{1815, 8582},
		{1775, 8700},
		{1792, 8797},
		{1602, 8923},
		{1372, 8975},
		{975, 8952},
		{728, 8870},
		{583, 8658},
		{508, 8350},
		{558, 8143},
		{730, 8040},
		{1070, 7907},
		{1255, 7876},
	},
}

local L1 = {
	{
		{6099, 5545},
		{6245, 5573},
		{6430, 5618},
		{6521, 5668},
		{6580, 5718},
		{6563, 5796},
		{6577, 5848},
		{6624, 5879},
		{6747, 5894},
		{6824, 5885},
		{6820, 5974},
		{6817, 6089},
		{6856, 6295},
		{6878, 6423},
		{6879, 6483},
		{6822, 6500},
		{6747, 6569},
		{6669, 6683},
		{6668, 6739},
		{6698, 6772},
		{6738, 6804},
		{6676, 6874},
		{6604, 6947},
		{6489, 6994},
		{6370, 7070},
		{6201, 7105},
		{6159, 7027},
		{6063, 6953},
		{5930, 6944},
		{5853, 6948},
		{5795, 6975},
		{5612, 6803},
		{5474, 6588},
		{5413, 6477},
		{5492, 6418},
		{5546, 6333},
		{5545, 6255},
		{5507, 6207},
		{5466, 6172},
		{5601, 6046},
		{5687, 5962},
		{5764, 5902},
		{5835, 5870},
		{5873, 5866},
		{5896, 5897},
		{5981, 5921},
		{6112, 5790},
		{6144, 5711},
		{6134, 5616},
	},
}

local S5 = {
	{4318, 5231},
	{6925, 4269},
	{8630, 6269},
	{7021, 8432},
	{4538, 7734},
}
local S10 = {
	{946, 5015},
	{2211, 2237},
	{5512, 926},
	{9144, 1367},
	{11253, 4194},
	{11626, 7812},
	{9625, 10440},
	{6737, 11610},
	{3546, 11249},
	{1120, 8528},
}
local S1 = {
	{6171, 6304},
}

local function combineTables(boxesArray, startpointsArray)
	local ret = {}
	local id = 0
	for i = 1, #boxesArray do
		for j = 1, #boxesArray[i] do
			ret[id] = {
				boxes = { boxesArray[i][j] },
				startpoints = { startpointsArray[i][j] },
			}
			id = id + 1
		end
	end
	return ret
end

local teams = Spring.Utilities.GetTeamCount()

if (teams == 1) then return combineTables({L1}, {S1}), supported_teamcounts
elseif (teams < 6) then return combineTables({L5}, {S5}), supported_teamcounts
elseif (teams == 6) then return combineTables({L5,L1}, {S5,S1}), supported_teamcounts
elseif (teams < 11) then return combineTables({L10}, {S10}), supported_teamcounts
elseif (teams == 11) then return combineTables({L10,L1}, {S10,S1}), supported_teamcounts
elseif (teams < 16) then return combineTables({L10,L5}, {S10,S5}), supported_teamcounts
else return combineTables({L10,L5,L1}, {S10,S5,S1}), supported_teamcounts
end
