local areas = {
	{ -- NW 8 A
		{2357, 228},
		{2531, 285},
		{2669, 348},
		{2752, 450},
		{2806, 589},
		{2811, 688},
		{2814, 700},
		{2817, 791},
		{2818, 802},
		{2799, 874},
		{2798, 889},
		{2797, 899},
		{2739, 972},
		{2732, 984},
		{2656, 1041},
		{2643, 1049},
		{2626, 1060},
		{2529, 1105},
		{2516, 1113},
		{2503, 1121},
		{2471, 1131},
		{2456, 1137},
		{2444, 1143},
		{2427, 1148},
		{2364, 1152},
		{2350, 1152},
		{2331, 1152},
		{2277, 1146},
		{2198, 1105},
		{2107, 1041},
		{2094, 1030},
		{2086, 1018},
		{2038, 979},
		{2019, 957},
		{1936, 844},
		{1932, 823},
		{1928, 802},
		{1917, 726},
		{1917, 709},
		{1919, 698},
		{1919, 683},
		{1934, 597},
		{1938, 578},
		{1942, 565},
		{1949, 551},
		{1976, 480},
		{1980, 468},
		{1988, 455},
		{2037, 386},
		{2050, 369},
		{2065, 355},
		{2134, 296},
		{2143, 226},
		{2162, 217},
		{2258, 243},
		{2273, 239},
		{2323, 233},
		{2342, 228},
		{2355, 228},
	}, { -- NE 8 A
		{7456, 1977},
		{7827, 2096},
		{7906, 2164},
		{7953, 2283},
		{7953, 2296},
		{7962, 2332},
		{7962, 2348},
		{7958, 2360},
		{7949, 2463},
		{7949, 2474},
		{7948, 2484},
		{7948, 2504},
		{7938, 2538},
		{7924, 2556},
		{7897, 2588},
		{7888, 2604},
		{7818, 2661},
		{7789, 2676},
		{7776, 2682},
		{7699, 2744},
		{7538, 2793},
		{7452, 2807},
		{7435, 2810},
		{7353, 2792},
		{7326, 2782},
		{7297, 2771},
		{7267, 2749},
		{7248, 2732},
		{7208, 2699},
		{7194, 2675},
		{7182, 2654},
		{7177, 2643},
		{7141, 2572},
		{7131, 2549},
		{7125, 2539},
		{7106, 2482},
		{7105, 2470},
		{7102, 2451},
		{7101, 2432},
		{7094, 2402},
		{7096, 2389},
		{7097, 2375},
		{7099, 2358},
		{7102, 2332},
		{7107, 2321},
		{7111, 2308},
		{7116, 2293},
		{7121, 2279},
		{7145, 2210},
		{7150, 2197},
		{7154, 2183},
		{7158, 2170},
		{7184, 2144},
		{7194, 2136},
		{7241, 2122},
		{7254, 2114},
		{7269, 2107},
		{7327, 2070},
		{7337, 2060},
		{7356, 2045},
		{7368, 2028},
		{7390, 1995},
		{7401, 1983},
		{7459, 1972},
	}, { -- SE 8 A
		{5766, 7050},
		{5931, 7096},
		{5945, 7127},
		{6077, 7223},
		{6093, 7233},
		{6193, 7291},
		{6226, 7364},
		{6212, 7525},
		{6189, 7662},
		{6165, 7737},
		{6154, 7750},
		{6110, 7801},
		{6094, 7818},
		{6065, 7838},
		{6045, 7849},
		{6029, 7854},
		{5975, 7865},
		{5961, 7870},
		{5950, 7877},
		{5930, 7890},
		{5898, 7903},
		{5876, 7914},
		{5859, 7918},
		{5807, 7934},
		{5794, 7936},
		{5781, 7935},
		{5713, 7901},
		{5702, 7898},
		{5691, 7896},
		{5656, 7891},
		{5645, 7892},
		{5628, 7890},
		{5588, 7884},
		{5570, 7881},
		{5547, 7875},
		{5526, 7870},
		{5472, 7831},
		{5323, 7818},
		{5307, 7565},
		{5395, 7327},
		{5624, 7064},
		{5707, 7097},
		{5760, 7053},
	}, { -- SW 8 A
		{932, 5409},
		{1079, 5656},
		{1091, 5880},
		{1012, 6057},
		{908, 6202},
		{719, 6185},
		{450, 6136},
		{302, 6032},
		{239, 5858},
		{238, 5846},
		{259, 5638},
		{340, 5492},
		{471, 5378},
		{595, 5369},
		{768, 5390},
		{920, 5413},
	}, { -- NW 8 B
		{972, 2049},
		{1028, 2142},
		{1090, 2248},
		{1113, 2342},
		{1105, 2481},
		{831, 2775},
		{744, 2811},
		{657, 2833},
		{601, 2837},
		{341, 2708},
		{311, 2631},
		{282, 2569},
		{279, 2559},
		{242, 2484},
		{240, 2465},
		{229, 2421},
		{230, 2410},
		{231, 2400},
		{244, 2327},
		{247, 2313},
		{266, 2234},
		{274, 2218},
		{281, 2207},
		{307, 2168},
		{316, 2156},
		{430, 1975},
		{646, 1913},
		{738, 1980},
		{787, 1955},
		{837, 2015},
		{898, 2002},
		{928, 2044},
		{970, 2049},
	}, { -- NE 8 B
		{5810, 244},
		{5968, 268},
		{6073, 341},
		{6149, 427},
		{6160, 439},
		{6205, 499},
		{6233, 582},
		{6248, 686},
		{6249, 700},
		{6246, 718},
		{6240, 831},
		{6239, 841},
		{6236, 855},
		{6233, 865},
		{6214, 924},
		{6211, 936},
		{6199, 946},
		{6127, 1017},
		{6114, 1028},
		{6100, 1042},
		{6046, 1063},
		{6036, 1070},
		{6011, 1080},
		{5951, 1111},
		{5930, 1124},
		{5920, 1129},
		{5890, 1141},
		{5877, 1150},
		{5857, 1151},
		{5780, 1146},
		{5763, 1146},
		{5746, 1144},
		{5725, 1143},
		{5683, 1137},
		{5671, 1135},
		{5654, 1128},
		{5633, 1114},
		{5601, 1095},
		{5520, 1050},
		{5503, 1035},
		{5456, 983},
		{5445, 962},
		{5436, 947},
		{5406, 898},
		{5400, 883},
		{5396, 868},
		{5378, 821},
		{5378, 798},
		{5375, 783},
		{5369, 755},
		{5365, 730},
		{5361, 708},
		{5353, 687},
		{5356, 673},
		{5358, 658},
		{5365, 639},
		{5374, 626},
		{5409, 573},
		{5415, 558},
		{5431, 535},
		{5446, 517},
		{5486, 468},
		{5496, 455},
		{5510, 437},
		{5526, 418},
		{5538, 404},
		{5567, 367},
		{5582, 347},
		{5593, 334},
		{5606, 316},
		{5630, 278},
		{5640, 263},
		{5659, 256},
		{5671, 257},
		{5681, 257},
		{5767, 254},
		{5781, 250},
		{5791, 247},
		{5806, 242},
	}, { -- SE 8 B
		{7861, 5543},
		{7427, 5377},
		{7085, 5724},
		{7103, 5893},
		{7163, 6041},
		{7237, 6116},
		{7246, 6129},
		{7257, 6140},
		{7328, 6197},
		{7342, 6205},
		{7360, 6211},
		{7469, 6242},
		{7483, 6248},
		{7493, 6251},
		{7505, 6254},
		{7551, 6259},
		{7566, 6260},
		{7592, 6258},
		{7697, 6215},
		{7714, 6205},
		{7789, 6135},
		{7802, 6123},
		{7812, 6115},
		{7870, 6041},
		{7877, 6022},
		{7903, 5958},
		{7910, 5944},
		{7918, 5931},
		{7923, 5919},
		{7941, 5830},
		{7941, 5815},
		{7940, 5799},
		{7937, 5780},
		{7926, 5703},
		{7922, 5684},
		{7917, 5666},
		{7891, 5591},
		{7886, 5581},
		{7878, 5566},
		{7863, 5537},
		{7910, 5653},
	}, { -- SW 8 B
		{2593, 7107},
		{2791, 7297},
		{2807, 7443},
		{2771, 7827},
		{2640, 7833},
		{2478, 7925},
		{2244, 7871},
		{2110, 7858},
		{1941, 7564},
		{1955, 7327},
		{2160, 7094},
		{2382, 7087},
		{2459, 7065},
		{2593, 7105},
	}, { -- NW 12
		{2088, 1562},
		{2207, 1605},
		{2252, 1691},
		{2313, 1783},
		{2398, 1894},
		{2401, 2188},
		{2290, 2235},
		{2215, 2313},
		{2133, 2383},
		{2047, 2454},
		{1741, 2399},
		{1701, 2359},
		{1638, 2350},
		{1560, 2197},
		{1495, 2023},
		{1503, 1905},
		{1534, 1760},
		{1558, 1680},
		{1661, 1623},
		{1747, 1575},
		{1897, 1551},
		{2008, 1575},
		{2083, 1559},
	}, { -- NE 12
		{6302, 1520},
		{6420, 1593},
		{6557, 1695},
		{6651, 1819},
		{6671, 1905},
		{6672, 1924},
		{6672, 1937},
		{6667, 2045},
		{6665, 2060},
		{6648, 2108},
		{6636, 2121},
		{6625, 2133},
		{6582, 2186},
		{6576, 2201},
		{6571, 2213},
		{6535, 2288},
		{6406, 2381},
		{6099, 2370},
		{5986, 2314},
		{5901, 2234},
		{5894, 2214},
		{5862, 2142},
		{5856, 2113},
		{5853, 2102},
		{5839, 1922},
		{5837, 1910},
		{5853, 1827},
		{5861, 1803},
		{5914, 1694},
		{5918, 1682},
		{5999, 1610},
		{6022, 1600},
		{6034, 1597},
		{6045, 1592},
		{6062, 1590},
		{6144, 1569},
		{6164, 1553},
		{6201, 1534},
		{6217, 1530},
		{6250, 1513},
		{6295, 1512},
	}, { -- SE 12
		{6477, 5854},
		{6006, 5848},
		{5865, 6016},
		{5830, 6320},
		{5909, 6487},
		{6124, 6584},
		{6171, 6670},
		{6211, 6657},
		{6324, 6604},
		{6401, 6636},
		{6618, 6424},
		{6648, 6336},
		{6654, 6320},
		{6674, 6188},
		{6673, 6178},
		{6673, 6167},
		{6667, 6102},
		{6660, 6086},
		{6657, 6071},
		{6615, 5985},
		{6611, 5975},
		{6561, 5931},
		{6548, 5920},
		{6535, 5905},
		{6475, 5854},
	}, { -- SW 12
		{2088, 5815},
		{2198, 5876},
		{2285, 5985},
		{2341, 6099},
		{2389, 6262},
		{2363, 6352},
		{2300, 6471},
		{2243, 6538},
		{2049, 6591},
		{1808, 6653},
		{1697, 6600},
		{1581, 6508},
		{1539, 6393},
		{1539, 6378},
		{1536, 6237},
		{1518, 6074},
		{1597, 5918},
		{1747, 5814},
		{2048, 5821},
	}, { -- NW 16
		{895, 547},
		{1062, 629},
		{1162, 674},
		{1286, 754},
		{1347, 893},
		{1334, 1036},
		{1312, 1185},
		{1315, 1195},
		{1262, 1308},
		{1141, 1404},
		{1047, 1449},
		{1034, 1454},
		{947, 1479},
		{937, 1481},
		{925, 1481},
		{824, 1490},
		{813, 1493},
		{749, 1392},
		{617, 1333},
		{606, 1322},
		{530, 1241},
		{524, 1229},
		{518, 1217},
		{477, 1154},
		{475, 1141},
		{471, 1131},
		{452, 1060},
		{452, 1041},
		{451, 1028},
		{464, 938},
		{465, 927},
		{469, 915},
		{488, 834},
		{493, 823},
		{501, 811},
		{508, 800},
		{547, 724},
		{557, 712},
		{626, 660},
		{639, 649},
		{672, 632},
		{684, 623},
		{702, 617},
		{825, 583},
		{873, 554},
		{897, 544},
	}, { -- NE 16
		{7302, 586},
		{7519, 669},
		{7592, 706},
		{7603, 716},
		{7616, 728},
		{7692, 822},
		{7697, 840},
		{7699, 851},
		{7703, 891},
		{7702, 902},
		{7702, 917},
		{7702, 978},
		{7702, 996},
		{7700, 1013},
		{7700, 1038},
		{7710, 1104},
		{7706, 1124},
		{7699, 1146},
		{7689, 1174},
		{7636, 1244},
		{7612, 1270},
		{7542, 1316},
		{7521, 1330},
		{7500, 1341},
		{7411, 1382},
		{7383, 1399},
		{7368, 1407},
		{7350, 1414},
		{7314, 1422},
		{7297, 1426},
		{7283, 1423},
		{7267, 1420},
		{7213, 1416},
		{7198, 1416},
		{7176, 1416},
		{7148, 1414},
		{7114, 1406},
		{7095, 1400},
		{7064, 1393},
		{7041, 1384},
		{7000, 1362},
		{6994, 1351},
		{6983, 1334},
		{6968, 1313},
		{6945, 1286},
		{6913, 1236},
		{6912, 1222},
		{6906, 1205},
		{6900, 1183},
		{6895, 1173},
		{6864, 1112},
		{6859, 1097},
		{6854, 1077},
		{6849, 1052},
		{6842, 998},
		{6843, 987},
		{6848, 973},
		{6855, 953},
		{6864, 928},
		{6874, 909},
		{6915, 817},
		{6921, 803},
		{6929, 788},
		{6941, 770},
		{6963, 733},
		{6972, 722},
		{6987, 701},
		{6997, 689},
		{7008, 671},
		{7023, 657},
		{7042, 643},
		{7055, 637},
		{7065, 629},
		{7079, 621},
		{7099, 609},
		{7122, 598},
		{7147, 593},
		{7172, 583},
		{7211, 581},
		{7255, 583},
		{7269, 581},
		{7280, 578},
		{7294, 574},
	}, { -- SE 16
		{7476, 6782},
		{7670, 6981},
		{7707, 7152},
		{7701, 7296},
		{7618, 7440},
		{7353, 7594},
		{7247, 7579},
		{7157, 7595},
		{6887, 7438},
		{6815, 7341},
		{6838, 7130},
		{6841, 7120},
		{6877, 7016},
		{6937, 6924},
		{7067, 6813},
		{7150, 6757},
		{7293, 6800},
		{7474, 6785},
	}, { -- SW 16
		{1169, 6803},
		{1293, 6964},
		{1317, 7159},
		{1343, 7329},
		{1149, 7537},
		{914, 7614},
		{725, 7525},
		{578, 7470},
		{503, 7354},
		{473, 7168},
		{534, 7038},
		{634, 6866},
		{764, 6781},
		{882, 6745},
		{1048, 6782},
		{1168, 6807},
	},
}

local ret = {}

local tc = Spring.Utilities.GetTeamCount()
if tc > 4 then
	for i = 1, (tc > 12 and 16 or tc > 8 and 12 or 8) do
		ret[i-1] = {
			boxes = {
				areas[i],
			}
		}
	end
else
	for i = 1, 4 do
		ret[i-1] = {
			boxes = {
				areas[i],
				areas[4+i],
				areas[8+i],
				areas[12+i],
			}
		}
	end

	ret[0].nameLong = "North-West"
	ret[0].nameShort = "NW"
	ret[1].nameLong = "North-East"
	ret[1].nameShort = "NE"
	ret[2].nameLong = "South-East"
	ret[2].nameShort = "SE"
	ret[3].nameLong = "South-West"
	ret[3].nameShort = "SW"
end

-- generate startpoints as circle middles
for boxID, box in pairs(ret) do
	box.startpoints = {}
	for polygonID, polygon in pairs(box.boxes) do
		local minx, minz, maxx, maxz = math.huge, math.huge, 0, 0
		local vertices = #polygon
		for i = 1, vertices do
			minx = math.min(minx, polygon[i][1])
			maxx = math.max(maxx, polygon[i][1])
			minz = math.min(minz, polygon[i][2])
			maxz = math.max(maxz, polygon[i][2])
		end
		box.startpoints[polygonID] = {(minx + maxx) / 2, (minz + maxz) / 2}
	end
end

return ret
