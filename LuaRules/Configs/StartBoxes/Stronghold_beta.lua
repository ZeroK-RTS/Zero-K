-- Stronghold beta boxes by Shaman --

local boxSE = {
	{6287, 8064},
	{6223, 8064},
	{6212, 8027},
	{6126, 7968},
	{5930, 7774},
	{5928, 7740},
	{6098, 7566},
	{6099, 7484},
	{6168, 7469},
	{6604, 7071},
	{6657, 7055},
	{6913, 6794},
	{6978, 6642},
	{7106, 6634},
	{7164, 6714},
	{7216, 6766},
	{7265, 6812},
	{7283, 6864},
	{7308, 6954},
	{7379, 6922},
	{7405, 6886},
	{7365, 6805},
	{7266, 6701},
	{7318, 6655},
	{7309, 6533},
	{7338, 6490},
	{7319, 6321},
	{7399, 6230},
	{7409, 6118},
	{7504, 6105},
	{7580, 6101},
	{7605, 6115},
	{7652, 6101},
	{7674, 6062},
	{7699, 6041},
	{7808, 6114},
	{7884, 6108},
	{7954, 6005},
	{8020, 6004},
	{8056, 6029},
	{8080, 6071},
	{8120, 6082},
	{8096, 6233},
	{8076, 6470},
	{8096, 6528},
	{8095, 6639},
	{8080, 6656},
	{8086, 6696},
	{8086, 6744},
	{8078, 6888},
	{8092, 6892},
	{8081, 7084},
	{8102, 7145},
	{8096, 7184},
	{8069, 7197},
	{8057, 7238},
	{8044, 7260},
	{7969, 7291},
	{7858, 7357},
	{7764, 7429},
	{7677, 7355},
	{7622, 7317},
	{7599, 7323},
	{7583, 7358},
	{7587, 7393},
	{7606, 7415},
	{7647, 7418},
	{7665, 7430},
	{7661, 7459},
	{7741, 7547},
	{7731, 7571},
	{7747, 7608},
	{7709, 7627},
	{7705, 7644},
	{7643, 7686},
	{7638, 7697},
	{7650, 7745},
	{7644, 7781},
	{7628, 7801},
	{7630, 7837},
	{7623, 7874},
	{7450, 8061},
	{7439, 8063},
	{7441, 8079},
	{7345, 8075},
	{7325, 8082},
	{7302, 8069},
	{7245, 8076},
	{6931, 8092},
	{6885, 8076},
	{6845, 8086},
	{6774, 8095},
	{6742, 8088},
	{6712, 8087},
	{6691, 8080},
	{6583, 8091},
	{6531, 8031},
	{6480, 7994},
	{6423, 7993},
	{6351, 7997},
	{6303, 8057},
}

local boxE = {
	{6396, 5345},
	{6459, 5352},
	{6542, 5359},
	{6578, 5349},
	{6684, 5365},
	{6732, 5358},
	{6773, 5311},
	{6816, 5274},
	{6876, 5254},
	{6920, 5238},
	{6945, 5225},
	{6964, 5182},
	{7035, 5129},
	{7066, 5128},
	{7088, 5145},
	{7120, 5147},
	{7145, 5187},
	{7153, 5278},
	{7130, 5302},
	{7128, 5336},
	{7097, 5348},
	{7202, 5357},
	{7236, 5329},
	{7374, 5326},
	{7414, 5364},
	{7484, 5379},
	{7479, 5347},
	{7494, 5313},
	{7578, 5218},
	{7583, 5187},
	{7586, 5162},
	{7602, 5109},
	{7655, 5055},
	{7677, 5030},
	{7740, 5040},
	{7751, 4998},
	{7810, 4917},
	{7851, 4828},
	{7906, 4794},
	{8018, 4773},
	{8037, 4757},
	{8036, 4740},
	{8004, 4729},
	{7990, 4721},
	{7995, 4679},
	{7996, 4636},
	{7984, 4615},
	{7964, 4569},
	{7967, 4525},
	{7987, 4503},
	{8028, 4450},
	{8016, 4399},
	{8038, 4342},
	{8035, 4312},
	{7995, 4318},
	{7557, 4580},
	{7463, 4673},
	{7304, 4693},
	{7245, 4699},
	{7261, 4767},
	{7235, 4788},
	{7184, 4742},
	{7174, 4652},
	{7175, 4583},
	{7171, 4552},
	{7133, 4502},
	{7101, 4457},
	{7090, 4442},
	{7092, 4393},
	{7065, 4369},
	{7033, 4337},
	{6985, 4286},
	{6944, 4289},
	{6909, 4289},
	{6823, 4234},
	{6740, 4165},
	{6656, 4136},
	{6585, 4186},
	{6552, 4196},
	{6527, 4181},
	{6475, 4207},
	{6385, 4296},
	{6377, 4388},
	{6133, 4610},
	{6039, 4611},
	{5976, 4659},
	{6125, 4820},
	{6384, 5147},
	{6456, 5244},
}

local boxNE = {
	{7624, 2295},
	{7715, 2292},
	{7759, 2229},
	{8003, 2010},
	{7949, 1933},
	{7906, 1847},
	{7909, 1685},
	{7983, 1624},
	{7991, 1462},
	{7984, 1223},
	{7971, 953},
	{7979, 758},
	{7875, 694},
	{7774, 629},
	{7661, 611},
	{7554, 586},
	{7512, 495},
	{7417, 526},
	{7351, 587},
	{7253, 630},
	{7195, 635},
	{7134, 577},
	{7195, 469},
	{7219, 229},
	{7148, 200},
	{7105, 171},
	{7058, 154},
	{6997, 170},
	{6919, 157},
	{6831, 134},
	{6766, 139},
	{6624, 150},
	{6551, 123},
	{6463, 130},
	{6424, 132},
	{6315, 122},
	{6240, 130},
	{6223, 112},
	{6113, 115},
	{6030, 148},
	{6000, 151},
	{5890, 299},
	{5907, 332},
	{5944, 357},
	{6014, 386},
	{6014, 417},
	{5994, 433},
	{5998, 513},
	{5961, 562},
	{5920, 590},
	{5950, 613},
	{5991, 618},
	{6016, 649},
	{6012, 699},
	{6021, 810},
	{6031, 874},
	{6094, 875},
	{6136, 893},
	{6156, 908},
	{6206, 927},
	{6223, 952},
	{6241, 965},
	{6349, 952},
	{6451, 948},
	{6574, 943},
	{6605, 971},
	{6686, 904},
	{6709, 888},
	{6816, 864},
	{6867, 910},
	{6866, 935},
	{6832, 951},
	{6777, 945},
	{6707, 999},
	{6659, 1048},
	{6632, 1077},
	{6607, 1118},
	{6574, 1133},
	{6555, 1159},
	{6550, 1186},
	{6547, 1212},
	{6558, 1252},
	{6550, 1287},
	{6550, 1305},
	{6561, 1306},
	{6633, 1282},
	{6677, 1307},
	{6743, 1366},
	{6788, 1413},
	{6829, 1434},
	{6881, 1465},
	{6920, 1551},
	{6923, 1568},
	{6947, 1574},
	{6954, 1620},
	{6957, 1639},
	{6986, 1646},
	{7026, 1651},
	{7078, 1648},
	{7118, 1664},
	{7141, 1685},
	{7162, 1712},
	{7186, 1747},
	{7256, 1821},
	{7302, 1877},
	{7467, 2079},
	{7474, 2135},
	{7479, 2155},
	{7522, 2169},
	{7548, 2197},
	{7558, 2211},
	{7555, 2240},
	{7581, 2245},
	{7607, 2257},
	{7616, 2275},
}

local boxNW = {
	{121, 2336},
	{190, 2323},
	{226, 2242},
	{283, 2213},
	{374, 2222},
	{433, 2266},
	{439, 2293},
	{455, 2291},
	{487, 2240},
	{531, 2226},
	{582, 2228},
	{643, 2206},
	{694, 2217},
	{730, 2204},
	{728, 2165},
	{741, 2124},
	{748, 2074},
	{775, 2050},
	{814, 2000},
	{832, 1964},
	{822, 1929},
	{812, 1816},
	{812, 1703},
	{830, 1639},
	{853, 1615},
	{799, 1557},
	{768, 1498},
	{740, 1440},
	{718, 1397},
	{743, 1372},
	{802, 1398},
	{854, 1456},
	{866, 1498},
	{886, 1533},
	{885, 1562},
	{915, 1563},
	{931, 1581},
	{998, 1618},
	{1000, 1666},
	{1032, 1701},
	{1120, 1695},
	{1175, 1658},
	{1183, 1603},
	{1200, 1553},
	{1239, 1503},
	{1428, 1290},
	{1471, 1262},
	{1502, 1264},
	{1530, 1269},
	{1554, 1267},
	{1572, 1223},
	{1607, 1160},
	{1682, 1094},
	{1900, 869},
	{2005, 782},
	{2037, 767},
	{2104, 681},
	{2137, 634},
	{2189, 570},
	{2183, 509},
	{2164, 453},
	{2140, 431},
	{2110, 417},
	{2094, 395},
	{2066, 382},
	{2044, 365},
	{2027, 342},
	{2040, 323},
	{2024, 312},
	{1997, 306},
	{1980, 308},
	{1959, 279},
	{1928, 254},
	{1904, 238},
	{1892, 214},
	{1843, 213},
	{1792, 249},
	{1748, 296},
	{1720, 318},
	{1693, 315},
	{1669, 296},
	{1651, 284},
	{1583, 290},
	{1557, 279},
	{1540, 269},
	{1541, 247},
	{1529, 236},
	{1524, 218},
	{1528, 205},
	{1512, 209},
	{1375, 210},
	{1320, 217},
	{1283, 222},
	{1223, 226},
	{1205, 212},
	{1156, 215},
	{1024, 229},
	{910, 237},
	{828, 242},
	{758, 240},
	{712, 239},
	{668, 238},
	{645, 258},
	{555, 364},
	{526, 415},
	{489, 465},
	{473, 496},
	{465, 522},
	{475, 564},
	{477, 601},
	{438, 661},
	{394, 695},
	{376, 713},
	{366, 805},
	{377, 823},
	{404, 823},
	{440, 843},
	{458, 889},
	{467, 905},
	{523, 924},
	{535, 941},
	{519, 951},
	{526, 980},
	{531, 1021},
	{500, 1029},
	{472, 1025},
	{457, 985},
	{423, 962},
	{390, 950},
	{386, 904},
	{361, 883},
	{337, 891},
	{319, 913},
	{296, 927},
	{279, 946},
	{243, 977},
	{210, 1009},
	{131, 1035},
	{121, 1067},
	{120, 1100},
	{119, 1125},
	{106, 1157},
	{100, 1186},
	{102, 1213},
	{137, 1267},
	{147, 1309},
	{148, 1353},
	{146, 1411},
	{140, 1440},
	{138, 1484},
	{142, 1556},
	{126, 1593},
	{110, 1636},
	{124, 1718},
	{116, 1782},
	{134, 1854},
	{130, 1896},
	{132, 1953},
	{118, 1977},
	{114, 2020},
	{120, 2043},
	{125, 2066},
	{122, 2088},
	{113, 2104},
	{113, 2130},
	{122, 2212},
	{140, 2223},
	{142, 2264},
	{138, 2296},
	{142, 2306},
}

local boxW = {
	{126, 3891},
	{196, 3878},
	{243, 3885},
	{282, 3875},
	{438, 3790},
	{565, 3721},
	{605, 3674},
	{638, 3646},
	{661, 3605},
	{762, 3562},
	{798, 3566},
	{894, 3546},
	{963, 3554},
	{985, 3622},
	{999, 3667},
	{983, 3725},
	{975, 3788},
	{998, 3804},
	{1051, 3796},
	{1096, 3875},
	{1100, 3921},
	{1133, 3935},
	{1154, 3978},
	{1177, 4013},
	{1190, 4029},
	{1270, 4016},
	{1302, 4026},
	{1326, 4060},
	{1349, 4077},
	{1371, 4103},
	{1368, 4129},
	{1392, 4126},
	{1403, 4145},
	{1436, 4171},
	{1455, 4191},
	{1503, 4183},
	{1534, 4173},
	{1546, 4143},
	{1592, 4122},
	{1638, 4111},
	{1676, 4116},
	{1709, 4081},
	{1793, 3998},
	{1807, 3910},
	{1868, 3837},
	{1948, 3765},
	{2014, 3701},
	{2132, 3700},
	{2182, 3639},
	{2151, 3587},
	{1979, 3418},
	{1863, 3297},
	{1744, 3147},
	{1698, 3071},
	{1721, 2957},
	{1700, 2944},
	{1550, 2951},
	{1453, 2952},
	{1388, 2984},
	{1314, 3046},
	{1230, 3078},
	{1199, 3103},
	{1214, 3133},
	{1223, 3159},
	{1175, 3203},
	{1110, 3207},
	{997, 3128},
	{1011, 3016},
	{1027, 2989},
	{997, 2945},
	{971, 2955},
	{869, 3003},
	{778, 2958},
	{745, 2956},
	{710, 2909},
	{661, 2937},
	{676, 2985},
	{557, 3123},
	{537, 3244},
	{411, 3295},
	{376, 3392},
	{321, 3433},
	{306, 3513},
	{136, 3564},
	{166, 3609},
	{183, 3656},
	{205, 3745},
	{190, 3786},
	{174, 3790},
	{156, 3853},
	{144, 3874},
}

local boxSW = {
	{769, 7723},
	{796, 7759},
	{800, 7773},
	{839, 7784},
	{861, 7810},
	{870, 7849},
	{872, 7872},
	{896, 7903},
	{873, 7964},
	{922, 7969},
	{947, 7993},
	{989, 8008},
	{996, 8030},
	{1069, 8047},
	{1115, 8036},
	{1146, 8053},
	{1178, 8053},
	{1198, 8053},
	{1207, 8064},
	{1220, 8070},
	{1236, 8068},
	{1272, 8063},
	{1293, 8058},
	{1337, 8053},
	{1354, 8053},
	{1379, 8065},
	{1394, 8076},
	{1407, 8073},
	{1407, 8061},
	{1423, 8061},
	{1494, 8054},
	{1522, 8052},
	{1548, 8062},
	{1574, 8059},
	{1598, 8065},
	{1635, 8061},
	{1657, 8056},
	{1703, 8050},
	{1730, 8047},
	{1730, 8037},
	{1748, 8029},
	{1800, 8046},
	{1895, 8043},
	{2016, 8037},
	{2030, 8062},
	{2114, 8054},
	{2124, 8065},
	{2208, 7974},
	{2193, 7930},
	{2171, 7897},
	{2164, 7865},
	{2127, 7855},
	{2110, 7817},
	{2102, 7777},
	{2117, 7742},
	{2117, 7715},
	{2131, 7688},
	{2181, 7643},
	{2159, 7616},
	{2165, 7585},
	{2150, 7577},
	{2134, 7586},
	{2117, 7569},
	{2112, 7539},
	{2121, 7525},
	{2124, 7441},
	{2121, 7425},
	{2110, 7422},
	{2104, 7404},
	{2099, 7376},
	{2096, 7349},
	{2050, 7349},
	{2024, 7355},
	{1979, 7342},
	{1952, 7330},
	{1944, 7316},
	{1907, 7269},
	{1886, 7264},
	{1857, 7280},
	{1829, 7286},
	{1801, 7258},
	{1702, 7260},
	{1591, 7257},
	{1550, 7269},
	{1510, 7243},
	{1470, 7278},
	{1433, 7307},
	{1405, 7324},
	{1380, 7338},
	{1363, 7339},
	{1335, 7347},
	{1306, 7349},
	{1281, 7336},
	{1266, 7307},
	{1261, 7288},
	{1289, 7282},
	{1326, 7279},
	{1350, 7272},
	{1365, 7258},
	{1402, 7236},
	{1462, 7182},
	{1481, 7155},
	{1502, 7131},
	{1525, 7096},
	{1563, 7072},
	{1585, 7054},
	{1589, 7029},
	{1577, 7011},
	{1572, 7000},
	{1571, 6978},
	{1571, 6959},
	{1565, 6942},
	{1570, 6920},
	{1538, 6901},
	{1453, 6891},
	{1432, 6880},
	{1407, 6877},
	{1395, 6859},
	{1384, 6856},
	{1374, 6839},
	{1358, 6832},
	{1352, 6814},
	{1340, 6775},
	{1338, 6759},
	{1310, 6745},
	{1292, 6729},
	{1264, 6714},
	{1255, 6701},
	{1211, 6695},
	{1198, 6687},
	{1191, 6658},
	{1190, 6632},
	{1188, 6617},
	{1190, 6601},
	{1182, 6584},
	{1172, 6568},
	{1162, 6554},
	{1107, 6545},
	{1067, 6529},
	{1048, 6511},
	{1023, 6489},
	{944, 6406},
	{891, 6350},
	{838, 6296},
	{811, 6273},
	{792, 6250},
	{765, 6230},
	{738, 6207},
	{707, 6170},
	{691, 6146},
	{676, 6090},
	{649, 6025},
	{616, 6019},
	{602, 5994},
	{581, 5975},
	{567, 5957},
	{545, 5953},
	{531, 5954},
	{513, 5933},
	{504, 5916},
	{485, 5900},
	{470, 5894},
	{432, 5909},
	{411, 5926},
	{388, 5952},
	{170, 6146},
	{157, 6157},
	{153, 6181},
	{140, 6190},
	{144, 6215},
	{143, 6230},
	{138, 6260},
	{129, 6276},
	{129, 6293},
	{175, 6305},
	{203, 6340},
	{219, 6357},
	{219, 6501},
	{155, 6542},
	{137, 6551},
	{128, 6571},
	{131, 6639},
	{110, 6665},
	{117, 6686},
	{130, 6706},
	{118, 6753},
	{102, 6774},
	{113, 6857},
	{125, 6880},
	{121, 6922},
	{111, 6969},
	{111, 7019},
	{109, 7107},
	{106, 7149},
	{135, 7182},
	{141, 7228},
	{147, 7284},
	{123, 7328},
	{115, 7346},
	{131, 7388},
	{130, 7407},
	{154, 7414},
	{176, 7440},
	{180, 7470},
	{201, 7496},
	{251, 7508},
	{274, 7519},
	{297, 7541},
	{295, 7567},
	{302, 7584},
	{328, 7589},
	{349, 7588},
	{358, 7604},
	{417, 7598},
	{480, 7589},
	{517, 7603},
	{539, 7650},
	{528, 7674},
	{526, 7686},
	{556, 7699},
	{578, 7698},
	{661, 7705},
	{685, 7701},
	{711, 7682},
	{792, 7588},
	{828, 7549},
	{848, 7552},
	{879, 7568},
	{903, 7582},
	{908, 7594},
	{882, 7616},
	{837, 7634},
	{815, 7681},
	{783, 7709},
}

local boxN = {
	{4603, 2261},
	{4593, 2145},
	{4566, 2084},
	{4527, 2035},
	{4439, 1983},
	{4404, 1917},
	{4361, 1885},
	{4261, 1887},
	{4227, 1823},
	{4167, 1771},
	{4162, 1706},
	{4096, 1598},
	{4102, 1567},
	{4209, 1450},
	{4252, 1419},
	{4268, 1341},
	{4259, 1300},
	{4307, 1242},
	{4331, 1222},
	{4377, 1208},
	{4436, 1187},
	{4474, 1132},
	{4487, 1103},
	{4567, 1078},
	{4617, 1061},
	{4646, 1083},
	{4687, 1053},
	{4690, 1019},
	{4673, 975},
	{4603, 959},
	{4615, 865},
	{4619, 821},
	{4571, 734},
	{4552, 678},
	{4492, 651},
	{4481, 639},
	{4515, 605},
	{4517, 549},
	{4516, 449},
	{4347, 233},
	{4410, 210},
	{4432, 183},
	{4450, 152},
	{4475, 133},
	{4505, 134},
	{4521, 153},
	{4536, 171},
	{4552, 177},
	{4563, 181},
	{4577, 222},
	{4613, 232},
	{4642, 226},
	{4653, 216},
	{4678, 212},
	{4678, 246},
	{4676, 275},
	{4693, 299},
	{4686, 334},
	{4721, 369},
	{4724, 403},
	{4836, 451},
	{4857, 480},
	{4943, 478},
	{4952, 538},
	{4970, 586},
	{5013, 636},
	{5086, 653},
	{5193, 725},
	{5240, 760},
	{5296, 756},
	{5309, 753},
	{5284, 800},
	{5252, 829},
	{5239, 903},
	{5234, 981},
	{5245, 1018},
	{5269, 1035},
	{5276, 1067},
	{5288, 1074},
	{5266, 1090},
	{5228, 1105},
	{5194, 1086},
	{5084, 1100},
	{5042, 1142},
	{5035, 1183},
	{5065, 1243},
	{5076, 1269},
	{5129, 1288},
	{5165, 1292},
	{5177, 1276},
	{5190, 1288},
	{5212, 1300},
	{5221, 1311},
	{5208, 1385},
	{5207, 1406},
	{5316, 1507},
	{5339, 1617},
	{5328, 1651},
	{5324, 1684},
	{5333, 1738},
	{5346, 1747},
	{5328, 1800},
	{5309, 1812},
	{5241, 1789},
	{5140, 1815},
	{4707, 2260},
	{4671, 2305},
	{4668, 2286},
}

local boxS = {
	{3437, 8030},
	{3449, 8036},
	{3483, 8020},
	{3492, 8007},
	{3550, 7988},
	{3580, 7974},
	{3619, 7956},
	{3673, 7977},
	{3697, 7988},
	{3704, 8003},
	{3774, 8011},
	{3727, 7949},
	{3675, 7885},
	{3605, 7779},
	{3600, 7700},
	{3613, 7622},
	{3630, 7592},
	{3558, 7561},
	{3502, 7412},
	{3516, 7311},
	{3522, 7253},
	{3493, 7232},
	{3388, 7228},
	{3377, 7215},
	{3396, 7184},
	{3465, 7185},
	{3544, 7180},
	{3561, 7166},
	{3636, 7153},
	{3696, 7060},
	{3759, 7035},
	{3803, 7034},
	{3834, 7001},
	{3859, 6962},
	{3855, 6922},
	{3864, 6885},
	{3884, 6841},
	{3927, 6792},
	{4044, 6672},
	{4048, 6629},
	{4008, 6617},
	{3985, 6610},
	{3977, 6547},
	{3970, 6485},
	{3921, 6436},
	{3879, 6395},
	{3791, 6362},
	{3718, 6344},
	{3692, 6282},
	{3695, 6248},
	{3634, 6233},
	{3543, 6104},
	{3550, 6025},
	{3476, 5939},
	{3393, 6054},
	{3196, 6258},
	{3022, 6425},
	{2937, 6444},
	{2880, 6437},
	{2842, 6415},
	{2815, 6401},
	{2792, 6409},
	{2784, 6444},
	{2802, 6533},
	{2797, 6562},
	{2813, 6582},
	{2810, 6620},
	{2802, 6658},
	{2795, 6676},
	{2793, 6757},
	{2847, 6769},
	{2866, 6782},
	{2867, 6801},
	{2897, 6807},
	{2911, 6823},
	{2917, 6853},
	{2930, 6919},
	{2925, 6950},
	{2983, 6946},
	{3019, 6964},
	{3063, 7005},
	{3080, 7052},
	{3079, 7098},
	{3020, 7143},
	{2959, 7142},
	{2916, 7153},
	{2869, 7152},
	{2861, 7190},
	{2867, 7250},
	{2882, 7327},
	{2858, 7379},
	{2805, 7489},
	{2898, 7494},
	{2922, 7527},
	{2960, 7548},
	{2974, 7583},
	{3001, 7597},
	{3051, 7594},
	{3117, 7626},
	{3149, 7648},
	{3157, 7693},
	{3172, 7754},
	{3187, 7765},
	{3223, 7781},
	{3270, 7810},
	{3300, 7810},
	{3323, 7821},
	{3340, 7837},
	{3351, 7853},
	{3391, 7875},
	{3425, 7909},
	{3424, 7931},
	{3415, 7966},
	{3429, 7969},
	{3447, 8005},
	{3441, 8023},
}

local startSE = {
	{6995, 7529},
	{7650, 6462},
}

local startNW = {
	{1104, 691},
	{508, 1853},
}

local startNE = {
	{6436, 503},
	{7492, 1267},
}

local startSW = {
	{1695, 7678},
	{656, 6943},
}

local startE = {
	{6643, 4557},
	{7588, 4932},
}

local startW = {
	{1524, 3622},
	{691, 3292},
}

local startN = {
	{4452, 1623},
	{4912, 783},
}

local startS = {
	{3560, 6720},
	{3138, 7367},
}

local function MergeStarts(t1, t2, t3)
	for i = 1, #t2 do
		t1[#t1 + 1] = t2[i]
	end
	for i = 1, t3 and #t3 or 0 do
		t1[#t1 + 1] = t3[i]
	end
	return t1
end

local spUtilities = Spring.Utilities
local sputGametype = spUtilities.Gametype
local r = math.random()
if sputGametype.isFFA() or sputGametype.is1v1() then
	if spUtilities.GetTeamCount() > 4 then return {
		-- 8-way FFA
		[0] = { boxes = {boxSE}, startpoints = startSE, nameLong = "South-East", nameShort = "SE" },
		[1] = { boxes = {boxNW}, startpoints = startNW, nameLong = "North-West", nameShort = "NW" },
		[2] = { boxes = {boxNE}, startpoints = startNE, nameLong = "North-East", nameShort = "NE" },
		[3] = { boxes = {boxSW}, startpoints = startSW, nameLong = "South-West", nameShort = "SW" },
		[4] = { boxes = {boxN }, startpoints = startN,  nameLong = "North",      nameShort = "N"  },
		[5] = { boxes = {boxS }, startpoints = startS,  nameLong = "South",      nameShort = "S"  },
		[6] = { boxes = {boxW }, startpoints = startW,  nameLong = "West",       nameShort = "W"  },
		[7] = { boxes = {boxE }, startpoints = startE,  nameLong = "East",       nameShort = "E"  },
	} elseif r < 0.5 then return {
		-- 1v1 or 4-way FFA, diagonals
		[0] = { boxes = {boxSE}, startpoints = startSE, nameLong = "South-East", nameShort = "SE" },
		[1] = { boxes = {boxNW}, startpoints = startNW, nameLong = "North-West", nameShort = "NW" },
		[2] = { boxes = {boxNE}, startpoints = startNE, nameLong = "North-East", nameShort = "NE" },
		[3] = { boxes = {boxSW}, startpoints = startSW, nameLong = "South-West", nameShort = "SW" },
	} else return {
		-- 1v1 or 4-way FFA, cardinals
		[0] = { boxes = {boxN}, startpoints = startN, nameLong = "North", nameShort = "N" },
		[1] = { boxes = {boxS}, startpoints = startS, nameLong = "South", nameShort = "S" },
		[2] = { boxes = {boxW}, startpoints = startW, nameLong = "West",  nameShort = "W" },
		[3] = { boxes = {boxE}, startpoints = startE, nameLong = "East",  nameShort = "E" },
	} end
elseif sputGametype.isSmallTeams() then
	if r < 0.5 then return {
		-- teams, 2-area, top vs bottom
		[0] = { boxes = {boxSE, boxS}, startpoints = MergeStarts(startSE, startS), nameLong = "South-East", nameShort = "SE" },
		[1] = { boxes = {boxNW, boxN}, startpoints = MergeStarts(startNW, startN), nameLong = "North-West", nameShort = "NW" },
	} else return {
		-- teams, 2-area, east vs west
		[0] = { boxes = {boxSE, boxE}, startpoints = MergeStarts(startSE, startE), nameLong = "South-East", nameShort = "SE" },
		[1] = { boxes = {boxNW, boxW}, startpoints = MergeStarts(startNW, startW), nameLong = "North-West", nameShort = "NW" },
	} end
else
	if r < 0.25 then return {
		-- teams, 3-area, top vs bottom
		[0] = { boxes = {boxS, boxSW, boxSE}, startpoints = MergeStarts(startS, startSW, startSE), nameLong = "South", nameShort = "S" },
		[1] = { boxes = {boxN, boxNE, boxNW}, startpoints = MergeStarts(startN, startNE, startNW), nameLong = "North", nameShort = "N" },
	} elseif r < 0.50 then return {
		-- teams, 3-area, east vs west
		[0] = { boxes = {boxE, boxNE, boxSE}, startpoints = MergeStarts(startE, startNE, startSE), nameLong = "East", nameShort = "E" },
		[1] = { boxes = {boxW, boxSW, boxNW}, startpoints = MergeStarts(startW, startSW, startNW), nameLong = "West", nameShort = "W" },
	} elseif r < 0.75 then return {
		-- teams, 3-area, corners SE vs NW
		[0] = { boxes = {boxSE, boxE, boxS}, startpoints = MergeStarts(startSE, startE, startS), nameLong = "South-East", nameShort = "SE" },
		[1] = { boxes = {boxNW, boxW, boxN}, startpoints = MergeStarts(startNW, startW, startN), nameLong = "North-West", nameShort = "NW" },
	} else return {
		-- teams, 3-area, corners SW vs NE
		[0] = { boxes = {boxSW, boxW, boxS}, startpoints = MergeStarts(startSW, startW, startS), nameLong = "South-West", nameShort = "SW" },
		[1] = { boxes = {boxNE, boxE, boxN}, startpoints = MergeStarts(startNE, startE, startN), nameLong = "North-East", nameShort = "NE" },
	} end
end