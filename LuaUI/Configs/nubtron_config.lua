--[[

INSTRUCTIONS

Choose names for the unitClass table and use those names in conditions.
For example if you use "Con" then you must use "ConSelected" not "conSelected":

local unitClasses = {
	Con	= { 'cloakcon' },
}

local steps = {
	selectCon = {
		image		= unitClasses.Con[1] ..'.png',
		passIfAny	= { 'ConSelected' },
	},
}

Use the mClasses table to indicate mobile units, as opposed to structures.
local mClasses = { Con=1, }


** Tasks and Steps **
Tasks and steps can either pass (move to next task/step) or fail (go to previous task/step).
A task contains a set of steps. Define the steps in a task using the "states" table (sorry, steps = states).
A task will pass when its own conditions pass and it's on its final step (state).
You can set conditions for a tasks/steps using the following tables.

** Condition tables **
errIfAny 		- task/step fails if any conditions are true
errIfAnyNot 	- task/step fails if any conditions are false

passIfAny 		- task/step completes if any conditions are true
passIfAnyNot 	- task/step completes if any conditions are false


** Generic conditions **
have<unitClass>			- unit exists and is completed
<unitClass>Selected		- unit is selected


** Special Built-in conditions **
clickedNubtron 			- user clicks Next button
commSelected			- user selects commander (based on customparam in ZK)
gameStarted
guardFac				- constructor (Con) guards factory (BotLab)
lowMetalIncome
lowEnergryIncome
metalMapView

** Generic Steps (autogenerated for you) **
selectBuild<unitClass>	- Tells user to select a structure from the build menu
start<unitClass>		- Triggers if user selected the structure to be built. Tells user to place the structure
build<unitClass>		- Unit (mobile or structure) is being built
finish<unitClass>		- Triggers if structure partly completed structure is no longer being built, tells user that structure needs finishing

]]

--- unit classes ---
local unitClasses = {
	Mex	= { 'staticmex' },
	Solar	= { 'energysolar' },
	LLT	= { 'turretlaser' },
	BotLab	= { 'factorycloak' },
	Radar	= { 'staticradar' },

	Con	= { 'cloakcon' },
	Raider	= { 'cloakraid' },
}
local unitClassNames = {
	Mex		= 'Mex',
	Solar	= 'Solar Collector',
	LLT		= 'Lotus',
	BotLab	= 'Cloakbot Factory',
	Radar	= 'Radar Tower',

	Con		= 'Conjurer',
	Raider	= 'Glaive',
}
--mobile units
local mClasses = { Con=1, Raider=1, }

-- generic sub states
local steps = {
	intro = {
		--message		= 'Hello! I am Nubtron, the friendly robot. I will teach you how to play Complete Annihilation. <(Click here to continue)>',
		passIfAny	= { 'clickedNubtron', },
	},
	intro2 = {
		--message		= 'Just follow my instructions. You can drag this window around by my face. <(Click here to continue)>',
		passIfAny	= { 'clickedNubtron'},
	},
	intro3 = {
		--message		= 'Practice zooming the camera in and out with your mouse\'s scroll wheel <(Click here to continue)>',
		passIfAny	= { 'clickedNubtron' },
	},
	intro4 = {
		--message		= 'Practice panning the camera up, down, left and right with your arrow keys. <(Click here to continue)>',
		passIfAny	= { 'clickedNubtron' },
	},
	intro5 = {
		--message		= 'Place your starting position by clicking on a nice flat spot on the map, then click on the <Ready> button',
		image		= 'LuaUI/Images/nubtron/mexSpotTip.png',
		passIfAny	= { 'gameStarted' },

	},
	selectComm = {
		--message		= 'Select only your commander by clicking on it or pressing <ctrl+c>.',
		passIfAny	= {'commSelected'}
	},
	showMetalMap = {
		--message		= 'View the metal map by pressing <F4>.',
		passIfAny	= { 'metalMapView' }
	},
	hideMetalMap = {
		--message		= 'Hide the metal map by pressing <F4>.',
		passIfAnyNot	= { 'metalMapView' }
	},
	selectAreaMex = {
		passIfAny	= { 'cmdAreaMex' }
	},

	selectBotLab = {
		--message		= 'Select only your Bot Lab by clicking on it (the blue circles will help you find it).',
		passIfAny	= { 'BotLabSelected' }
	},

	selectCon = {
		--message		= 'Select one constructor by clicking on it (the blue circles will help you find it).',
		--image		= { arm='unitpics/'.. unitClasses.Con[1] ..'.png', core='unitpics/'.. unitClasses.Con[2] ..'.png' },
		image		= 'unitpics/' .. unitClasses.Con[1] ..'.png',
		passIfAny	= { 'ConSelected' },
	},

	guardFac = {
		--message		= 'Have the constructor guard your Bot Lab by right clicking on the Lab. The constructor will assist it until you give it a different order.',
		errIfAnyNot	= { 'ConSelected' },
	},

	raiderTipState = {
		image		= 'unitpics/' .. unitClasses.Raider[1] ..'.png',
		passIfAny	= { 'clickedNubtron' },
	},
	repeatTipState = {
		image		= 'LuaUI/Images/nubtron/repeatTip.png',
		passIfAny	= { 'clickedNubtron' },
	},

	--[[
	rotate = {
		--message		= 'Try rotating.',
		errIfAnyNot	= { 'commSelected', 'BotLabBuildSelected' },
		passIfAny	= { 'clickedNubtron' }
	},
	--]]
	epilogue1 = {
		passIfAny	= { 'clickedNubtron' },
	},
	epilogue2 = {
		image		= 'LuaUI/Images/nubtron/lineMove.png',
		passIfAny	= { 'clickedNubtron' },
	},
	epilogue3 = {
		image		= 'unitpics/' .. unitClasses.Raider[1] ..'.png',
		passIfAny	= { 'clickedNubtron' },
	},
	epilogue4 = {
		image		= 'LuaUI/Images/nubtron/roninReaver.png',
		passIfAny	= { 'clickedNubtron' },
	},
	epilogue5 = {
		image		= 'LuaUI/Images/nubtron/knightSling.png',
		passIfAny	= { 'clickedNubtron' },
	},
	epilogue6 = {
		passIfAny	= { 'clickedNubtron' },
	},
	epilogue7 = {
		image		= 'unitpics/' .. unitClasses.Con[1] ..'.png',
		passIfAny	= { 'clickedNubtron' },
	},
	epilogue8 = {
		image		= 'LuaUI/Images/commands/Bold/mex.png',
		passIfAny	= { 'clickedNubtron' },
	},
	epilogue9 = {
		image		= 'LuaUI/Images/nubtron/areaMexTip.png',
		passIfAny	= { 'clickedNubtron' },
	},
	epilogue10 = {
		image		= 'LuaUI/Images/commands/Bold/repair.png',
		passIfAny	= { 'clickedNubtron' },
	},
	epilogue11 = {
		image		= 'LuaUI/Images/nubtron/repairReclaim.png',
		passIfAny	= { 'clickedNubtron' },
	},
	epilogue12 = {
		image		= 'LuaUI/Images/nubtron/barsTip.png',
		passIfAny	= { 'clickedNubtron' },
	},
	epilogue13 = {
		image		= 'LuaUI/Images/ibeam.png',
		passIfAny	= { 'clickedNubtron' },
	},
	epilogue14 = {
		image		= 'LuaUI/Images/nubtron/buildNano.png',
		passIfAny	= { 'clickedNubtron' },
	},
	epilogue15 = {
		image		= 'unitpics/platecloak.png',
		passIfAny	= { 'clickedNubtron' },
	},
	epilogue16 = {
		passIfAny	= { 'clickedNubtron' },
	},
	tutorialEnd = {
		--message		= 'This is the end of the tutorial. It is now safe to shut off Nubtron. Goodbye! (Click here to restart tutorial)',
		passIfAny	= {'clickedNubtron'}
	},
}

-- main states
-- use any names you wish here, so long as they match up to the tasks table
local taskOrder = {
	'intro',
	'buildMex',
	'buildFac',
	'buildSolar',
	'buildLLT',
	'buildRadar',
	'buildCon',
	'conAssist',
	'buildRaider',
	'raiderTip',
	'buildMex2',
	'buildSolar2',
	'epilogue_start',
	'epilogue_units',
	'epilogue_constructors',
	'epilogue_economy',
	'congrats',
}
--use "states" from the steps table above.
local tasks = {
	
	intro = {
		--desc		= 'Introduction',
		states		= {'intro', 'intro3', 'intro4', 'intro5', },
	},
	restoreInterface = {
		--desc		= 'Restore your interface',
		states		= { 'hideMetalMap', },
	},
	buildMex = {
		--desc		= 'Building a Metal Extractor (mex)',
		--tip			= 'Metal extractors output metal which is the heart of your economy.',
		states		= { 'selectComm', 'finishMex', 'selectBuildMex', 'startMex', 'buildMex'},
		--states		= { 'selectComm', 'showMetalMap', 'finishMex', 'selectBuildMex', 'startMex', 'buildMex', 'hideMetalMap' },
		passIfAll	= { 'haveMex',},
	},
	buildSolar = {
		--desc		= 'Building a Solar Collector',
		--tip			= 'Energy generating structures power your mexes and factories.',
		states		= { 'selectComm', 'finishSolar', 'selectBuildSolar', 'startSolar', 'buildSolar'},
		--errIfAnyNot	= { 'haveMex' },
		passIfAll	= { 'haveSolar',},
	},
	buildLLT = {
		--desc		= 'Building a Light Laser Tower (LLT)',
		states		= { 'selectComm', 'finishLLT', 'selectBuildLLT', 'startLLT', 'buildLLT' },
		--errIfAnyNot	= { 'haveMex', 'haveSolar' },
		passIfAll	= { 'haveLLT',},
	},
	buildFac = {
		--desc		= 'Building a Factory',
		states		= { 'selectComm', 'finishBotLab', 'selectBuildBotLab', 'startBotLab', 'buildBotLab' },
		--errIfAnyNot	= { 'haveMex', 'haveSolar', 'haveLLT' },
		passIfAll	= { 'haveBotLab',},
	},
	buildRadar = {
		--desc		= 'Building a Radar',
		--tip			= 'Radar coverage shows you distant enemy units as blips.',
		states		= { 'selectComm', 'finishRadar', 'selectBuildRadar', 'startRadar', 'buildRadar' },
		--errIfAnyNot	= { 'haveMex', 'haveSolar', 'haveLLT', 'haveBotLab' },
		passIfAll	= { 'haveRadar',},
	},
	buildCon = {
		--desc		= 'Building a Constructor',
		--tip			= 'Just like your Commander, Constructors build (and assist building of) structures.',
		states		= { 'selectBotLab', 'selectBuildCon', 'buildCon' },
		--errIfAnyNot	= { 'haveMex', 'haveSolar', 'haveLLT', 'haveBotLab', 'haveRadar' },
		passIfAll	= { 'haveCon',},
	},
	conAssist = {
		--desc		= 'Using a constructor to assist your factory',
		--tip			= 'Factories that are assisted by constructors build faster.',
		states		= { 'selectCon', 'guardFac', },
		--errIfAnyNot	= { 'haveMex', 'haveSolar', 'haveLLT', 'haveBotLab', 'haveRadar', 'haveCon' },
		passIfAll	= { 'guardFac',},
	},
	buildRaider = {
		--desc		= 'Building Raider Bots in your factory.',
		--tip			= 'Combat units are used to attack your enemies and make them suffer.',
		states		= { 'selectBotLab', 'selectBuildRaider', 'buildRaider', },
		--errIfAnyNot	= { 'haveMex', 'haveSolar', 'haveLLT', 'haveBotLab', 'haveRadar', 'haveCon', 'guardFac' },
		passIfAll	= { 'haveRaider',},
	},
	raiderTip = {
		states = { 'raiderTipState', 'repeatTipState', },
	},
	buildMex2 = {
		--desc		= 'Building another mex on a different metal spot.',
		---tip			= 'Always try to acquire more metal spots to build more mexes.',
		states		= { 'selectComm', 'finishMex', 'selectBuildMex', 'startMex', 'buildMex'},
		--errIfAnyNot	= { 'haveMex', 'haveSolar' },
		passIfAnyNot	= { 'lowMetalIncome', },
	},
	buildSolar2 = {
		--desc		= 'Building another Solar Collector',
		--tip			= 'Always try and build more energy structures to keep your economy growing.',
		states		= { 'selectComm', 'finishSolar', 'selectBuildSolar', 'startSolar', 'buildSolar', },
		--errIfAnyNot	= { 'haveMex', 'haveSolar' },
		passIfAnyNot	= { 'lowEnergyIncome', }
	},
	epilogue_start = {
		--desc		= 'Congratulations!',
		states		= { 'epilogue1'},
	},
	epilogue_units = {
		--desc		= 'Congratulations!',
		states		= { 'epilogue2', 'epilogue3', 'epilogue4', 'epilogue5', 'epilogue6'},
	},
	epilogue_constructors = {
		--desc		= 'Congratulations!',
		states		= { 'epilogue7', 'epilogue8', 'epilogue9', 'epilogue10', 'epilogue11'},
	},
	epilogue_economy = {
		--desc		= 'Congratulations!',
		states		= { 'epilogue12', 'epilogue13', 'epilogue14', 'epilogue15', 'epilogue16'},
	},
	congrats = {
		--desc		= 'Congratulations!',
		states		= { 'tutorialEnd'},
	},
}


return {unitClasses=unitClasses, unitClassNames=unitClassNames, mClasses=mClasses, steps=steps, tasks=tasks, taskOrder=taskOrder,}
